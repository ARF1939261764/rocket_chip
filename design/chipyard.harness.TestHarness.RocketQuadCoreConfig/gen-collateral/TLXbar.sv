// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module TLXbar(
  input         clock,
                reset,
                auto_in_4_a_valid,
  input  [2:0]  auto_in_4_a_bits_opcode,
                auto_in_4_a_bits_param,
  input  [3:0]  auto_in_4_a_bits_size,
  input  [1:0]  auto_in_4_a_bits_source,
  input  [31:0] auto_in_4_a_bits_address,
  input  [7:0]  auto_in_4_a_bits_mask,
  input  [63:0] auto_in_4_a_bits_data,
  input         auto_in_4_a_bits_corrupt,
                auto_in_4_b_ready,
                auto_in_4_c_valid,
  input  [2:0]  auto_in_4_c_bits_opcode,
                auto_in_4_c_bits_param,
  input  [3:0]  auto_in_4_c_bits_size,
  input  [1:0]  auto_in_4_c_bits_source,
  input  [31:0] auto_in_4_c_bits_address,
  input  [63:0] auto_in_4_c_bits_data,
  input         auto_in_4_c_bits_corrupt,
                auto_in_4_d_ready,
                auto_in_4_e_valid,
  input  [2:0]  auto_in_4_e_bits_sink,
  input         auto_in_3_a_valid,
  input  [2:0]  auto_in_3_a_bits_opcode,
                auto_in_3_a_bits_param,
  input  [3:0]  auto_in_3_a_bits_size,
  input  [1:0]  auto_in_3_a_bits_source,
  input  [31:0] auto_in_3_a_bits_address,
  input  [7:0]  auto_in_3_a_bits_mask,
  input  [63:0] auto_in_3_a_bits_data,
  input         auto_in_3_a_bits_corrupt,
                auto_in_3_b_ready,
                auto_in_3_c_valid,
  input  [2:0]  auto_in_3_c_bits_opcode,
                auto_in_3_c_bits_param,
  input  [3:0]  auto_in_3_c_bits_size,
  input  [1:0]  auto_in_3_c_bits_source,
  input  [31:0] auto_in_3_c_bits_address,
  input  [63:0] auto_in_3_c_bits_data,
  input         auto_in_3_c_bits_corrupt,
                auto_in_3_d_ready,
                auto_in_3_e_valid,
  input  [2:0]  auto_in_3_e_bits_sink,
  input         auto_in_2_a_valid,
  input  [2:0]  auto_in_2_a_bits_opcode,
                auto_in_2_a_bits_param,
  input  [3:0]  auto_in_2_a_bits_size,
  input  [1:0]  auto_in_2_a_bits_source,
  input  [31:0] auto_in_2_a_bits_address,
  input  [7:0]  auto_in_2_a_bits_mask,
  input  [63:0] auto_in_2_a_bits_data,
  input         auto_in_2_a_bits_corrupt,
                auto_in_2_b_ready,
                auto_in_2_c_valid,
  input  [2:0]  auto_in_2_c_bits_opcode,
                auto_in_2_c_bits_param,
  input  [3:0]  auto_in_2_c_bits_size,
  input  [1:0]  auto_in_2_c_bits_source,
  input  [31:0] auto_in_2_c_bits_address,
  input  [63:0] auto_in_2_c_bits_data,
  input         auto_in_2_c_bits_corrupt,
                auto_in_2_d_ready,
                auto_in_2_e_valid,
  input  [2:0]  auto_in_2_e_bits_sink,
  input         auto_in_1_a_valid,
  input  [2:0]  auto_in_1_a_bits_opcode,
                auto_in_1_a_bits_param,
  input  [3:0]  auto_in_1_a_bits_size,
  input  [1:0]  auto_in_1_a_bits_source,
  input  [31:0] auto_in_1_a_bits_address,
  input  [7:0]  auto_in_1_a_bits_mask,
  input  [63:0] auto_in_1_a_bits_data,
  input         auto_in_1_a_bits_corrupt,
                auto_in_1_b_ready,
                auto_in_1_c_valid,
  input  [2:0]  auto_in_1_c_bits_opcode,
                auto_in_1_c_bits_param,
  input  [3:0]  auto_in_1_c_bits_size,
  input  [1:0]  auto_in_1_c_bits_source,
  input  [31:0] auto_in_1_c_bits_address,
  input  [63:0] auto_in_1_c_bits_data,
  input         auto_in_1_c_bits_corrupt,
                auto_in_1_d_ready,
                auto_in_1_e_valid,
  input  [2:0]  auto_in_1_e_bits_sink,
  input         auto_in_0_a_valid,
  input  [2:0]  auto_in_0_a_bits_opcode,
                auto_in_0_a_bits_param,
  input  [3:0]  auto_in_0_a_bits_size,
                auto_in_0_a_bits_source,
  input  [31:0] auto_in_0_a_bits_address,
  input  [7:0]  auto_in_0_a_bits_mask,
  input  [63:0] auto_in_0_a_bits_data,
  input         auto_in_0_a_bits_corrupt,
                auto_in_0_d_ready,
                auto_out_2_a_ready,
                auto_out_2_d_valid,
  input  [2:0]  auto_out_2_d_bits_opcode,
  input  [3:0]  auto_out_2_d_bits_size,
  input  [4:0]  auto_out_2_d_bits_source,
  input         auto_out_2_d_bits_denied,
  input  [63:0] auto_out_2_d_bits_data,
  input         auto_out_2_d_bits_corrupt,
                auto_out_1_a_ready,
                auto_out_1_b_valid,
  input  [1:0]  auto_out_1_b_bits_param,
  input  [4:0]  auto_out_1_b_bits_source,
  input  [31:0] auto_out_1_b_bits_address,
  input         auto_out_1_c_ready,
                auto_out_1_d_valid,
  input  [2:0]  auto_out_1_d_bits_opcode,
  input  [1:0]  auto_out_1_d_bits_param,
  input  [2:0]  auto_out_1_d_bits_size,
  input  [4:0]  auto_out_1_d_bits_source,
  input  [2:0]  auto_out_1_d_bits_sink,
  input         auto_out_1_d_bits_denied,
  input  [63:0] auto_out_1_d_bits_data,
  input         auto_out_1_d_bits_corrupt,
                auto_out_0_a_ready,
                auto_out_0_d_valid,
  input  [2:0]  auto_out_0_d_bits_opcode,
  input  [1:0]  auto_out_0_d_bits_param,
  input  [3:0]  auto_out_0_d_bits_size,
  input  [4:0]  auto_out_0_d_bits_source,
  input         auto_out_0_d_bits_sink,
                auto_out_0_d_bits_denied,
  input  [63:0] auto_out_0_d_bits_data,
  input         auto_out_0_d_bits_corrupt,
  output        auto_in_4_a_ready,
                auto_in_4_b_valid,
  output [1:0]  auto_in_4_b_bits_param,
                auto_in_4_b_bits_source,
  output [31:0] auto_in_4_b_bits_address,
  output        auto_in_4_c_ready,
                auto_in_4_d_valid,
  output [2:0]  auto_in_4_d_bits_opcode,
  output [1:0]  auto_in_4_d_bits_param,
  output [3:0]  auto_in_4_d_bits_size,
  output [1:0]  auto_in_4_d_bits_source,
  output [2:0]  auto_in_4_d_bits_sink,
  output        auto_in_4_d_bits_denied,
  output [63:0] auto_in_4_d_bits_data,
  output        auto_in_4_d_bits_corrupt,
                auto_in_4_e_ready,
                auto_in_3_a_ready,
                auto_in_3_b_valid,
  output [1:0]  auto_in_3_b_bits_param,
                auto_in_3_b_bits_source,
  output [31:0] auto_in_3_b_bits_address,
  output        auto_in_3_c_ready,
                auto_in_3_d_valid,
  output [2:0]  auto_in_3_d_bits_opcode,
  output [1:0]  auto_in_3_d_bits_param,
  output [3:0]  auto_in_3_d_bits_size,
  output [1:0]  auto_in_3_d_bits_source,
  output [2:0]  auto_in_3_d_bits_sink,
  output        auto_in_3_d_bits_denied,
  output [63:0] auto_in_3_d_bits_data,
  output        auto_in_3_d_bits_corrupt,
                auto_in_3_e_ready,
                auto_in_2_a_ready,
                auto_in_2_b_valid,
  output [1:0]  auto_in_2_b_bits_param,
                auto_in_2_b_bits_source,
  output [31:0] auto_in_2_b_bits_address,
  output        auto_in_2_c_ready,
                auto_in_2_d_valid,
  output [2:0]  auto_in_2_d_bits_opcode,
  output [1:0]  auto_in_2_d_bits_param,
  output [3:0]  auto_in_2_d_bits_size,
  output [1:0]  auto_in_2_d_bits_source,
  output [2:0]  auto_in_2_d_bits_sink,
  output        auto_in_2_d_bits_denied,
  output [63:0] auto_in_2_d_bits_data,
  output        auto_in_2_d_bits_corrupt,
                auto_in_2_e_ready,
                auto_in_1_a_ready,
                auto_in_1_b_valid,
  output [1:0]  auto_in_1_b_bits_param,
                auto_in_1_b_bits_source,
  output [31:0] auto_in_1_b_bits_address,
  output        auto_in_1_c_ready,
                auto_in_1_d_valid,
  output [2:0]  auto_in_1_d_bits_opcode,
  output [1:0]  auto_in_1_d_bits_param,
  output [3:0]  auto_in_1_d_bits_size,
  output [1:0]  auto_in_1_d_bits_source,
  output [2:0]  auto_in_1_d_bits_sink,
  output        auto_in_1_d_bits_denied,
  output [63:0] auto_in_1_d_bits_data,
  output        auto_in_1_d_bits_corrupt,
                auto_in_1_e_ready,
                auto_in_0_a_ready,
                auto_in_0_d_valid,
  output [2:0]  auto_in_0_d_bits_opcode,
  output [1:0]  auto_in_0_d_bits_param,
  output [3:0]  auto_in_0_d_bits_size,
                auto_in_0_d_bits_source,
  output [2:0]  auto_in_0_d_bits_sink,
  output        auto_in_0_d_bits_denied,
  output [63:0] auto_in_0_d_bits_data,
  output        auto_in_0_d_bits_corrupt,
                auto_out_2_a_valid,
  output [2:0]  auto_out_2_a_bits_opcode,
                auto_out_2_a_bits_param,
  output [3:0]  auto_out_2_a_bits_size,
  output [4:0]  auto_out_2_a_bits_source,
  output [30:0] auto_out_2_a_bits_address,
  output [7:0]  auto_out_2_a_bits_mask,
  output [63:0] auto_out_2_a_bits_data,
  output        auto_out_2_a_bits_corrupt,
                auto_out_2_d_ready,
                auto_out_1_a_valid,
  output [2:0]  auto_out_1_a_bits_opcode,
                auto_out_1_a_bits_param,
                auto_out_1_a_bits_size,
  output [4:0]  auto_out_1_a_bits_source,
  output [31:0] auto_out_1_a_bits_address,
  output [7:0]  auto_out_1_a_bits_mask,
  output [63:0] auto_out_1_a_bits_data,
  output        auto_out_1_a_bits_corrupt,
                auto_out_1_b_ready,
                auto_out_1_c_valid,
  output [2:0]  auto_out_1_c_bits_opcode,
                auto_out_1_c_bits_param,
                auto_out_1_c_bits_size,
  output [4:0]  auto_out_1_c_bits_source,
  output [31:0] auto_out_1_c_bits_address,
  output [63:0] auto_out_1_c_bits_data,
  output        auto_out_1_c_bits_corrupt,
                auto_out_1_d_ready,
                auto_out_1_e_valid,
  output [2:0]  auto_out_1_e_bits_sink,
  output        auto_out_0_a_valid,
  output [2:0]  auto_out_0_a_bits_opcode,
                auto_out_0_a_bits_param,
  output [3:0]  auto_out_0_a_bits_size,
  output [4:0]  auto_out_0_a_bits_source,
  output [30:0] auto_out_0_a_bits_address,
  output [7:0]  auto_out_0_a_bits_mask,
  output [63:0] auto_out_0_a_bits_data,
  output        auto_out_0_a_bits_corrupt,
                auto_out_0_d_ready
);

  wire        allowed_9_2;	// @[Arbiter.scala:122:24]
  wire        allowed_9_1;	// @[Arbiter.scala:122:24]
  wire        allowed_9_0;	// @[Arbiter.scala:122:24]
  wire        allowed_8_2;	// @[Arbiter.scala:122:24]
  wire        allowed_8_1;	// @[Arbiter.scala:122:24]
  wire        allowed_8_0;	// @[Arbiter.scala:122:24]
  wire        allowed_7_2;	// @[Arbiter.scala:122:24]
  wire        allowed_7_1;	// @[Arbiter.scala:122:24]
  wire        allowed_7_0;	// @[Arbiter.scala:122:24]
  wire        allowed_6_2;	// @[Arbiter.scala:122:24]
  wire        allowed_6_1;	// @[Arbiter.scala:122:24]
  wire        allowed_6_0;	// @[Arbiter.scala:122:24]
  wire        allowed_5_2;	// @[Arbiter.scala:122:24]
  wire        allowed_5_1;	// @[Arbiter.scala:122:24]
  wire        allowed_5_0;	// @[Arbiter.scala:122:24]
  wire        allowed_4_4;	// @[Arbiter.scala:122:24]
  wire        allowed_4_3;	// @[Arbiter.scala:122:24]
  wire        allowed_4_2;	// @[Arbiter.scala:122:24]
  wire        allowed_4_1;	// @[Arbiter.scala:122:24]
  wire        allowed_4_0;	// @[Arbiter.scala:122:24]
  wire        allowed_1_4;	// @[Arbiter.scala:122:24]
  wire        allowed_1_3;	// @[Arbiter.scala:122:24]
  wire        allowed_1_2;	// @[Arbiter.scala:122:24]
  wire        allowed_1_1;	// @[Arbiter.scala:122:24]
  wire        allowed_1_0;	// @[Arbiter.scala:122:24]
  wire        allowed_4;	// @[Arbiter.scala:122:24]
  wire        allowed_3;	// @[Arbiter.scala:122:24]
  wire        allowed_2;	// @[Arbiter.scala:122:24]
  wire        allowed_1;	// @[Arbiter.scala:122:24]
  wire        allowed_0;	// @[Arbiter.scala:122:24]
  wire [4:0]  portsAOI_filtered_2_bits_source = {1'h0, auto_in_0_a_bits_source};	// @[Xbar.scala:240:29]
  wire [4:0]  portsAOI_filtered_1_2_bits_source = {3'h7, auto_in_1_a_bits_source};	// @[Parameters.scala:54:32, Xbar.scala:240:55]
  wire [4:0]  portsAOI_filtered_2_2_bits_source = {3'h6, auto_in_2_a_bits_source};	// @[Xbar.scala:240:55]
  wire [4:0]  portsAOI_filtered_3_2_bits_source = {3'h5, auto_in_3_a_bits_source};	// @[Parameters.scala:54:32, Xbar.scala:240:55]
  wire [4:0]  portsAOI_filtered_4_2_bits_source = {3'h4, auto_in_4_a_bits_source};	// @[Parameters.scala:54:32, Xbar.scala:240:55]
  wire [2:0]  out_45_bits_sink = {2'h0, auto_out_0_d_bits_sink};	// @[Xbar.scala:326:28]
  wire [3:0]  out_46_bits_size = {1'h0, auto_out_1_d_bits_size};	// @[BundleMap.scala:247:19]
  wire        requestAIO_0_0 = auto_in_0_a_bits_address[31:29] == 3'h0 | {auto_in_0_a_bits_address[31:29] ^ 3'h2, auto_in_0_a_bits_address[16]} == 4'h0;	// @[Bundles.scala:259:74, Parameters.scala:137:{31,45,65}, Xbar.scala:366:92]
  wire        requestAIO_0_1 = auto_in_0_a_bits_address[31:29] == 3'h4;	// @[Parameters.scala:54:32, :137:{45,65}]
  wire        requestAIO_0_2 = auto_in_0_a_bits_address[31:29] == 3'h3;	// @[Parameters.scala:137:{31,45,65}]
  wire        requestAIO_1_0 = auto_in_1_a_bits_address[31:29] == 3'h0 | {auto_in_1_a_bits_address[31:29] ^ 3'h2, auto_in_1_a_bits_address[16]} == 4'h0;	// @[Bundles.scala:259:74, Parameters.scala:137:{31,45,65}, Xbar.scala:366:92]
  wire        requestAIO_1_1 = auto_in_1_a_bits_address[31:29] == 3'h4;	// @[Parameters.scala:54:32, :137:{45,65}]
  wire        requestAIO_1_2 = auto_in_1_a_bits_address[31:29] == 3'h3;	// @[Parameters.scala:137:{31,45,65}]
  wire        requestAIO_2_0 = auto_in_2_a_bits_address[31:29] == 3'h0 | {auto_in_2_a_bits_address[31:29] ^ 3'h2, auto_in_2_a_bits_address[16]} == 4'h0;	// @[Bundles.scala:259:74, Parameters.scala:137:{31,45,65}, Xbar.scala:366:92]
  wire        requestAIO_2_1 = auto_in_2_a_bits_address[31:29] == 3'h4;	// @[Parameters.scala:54:32, :137:{45,65}]
  wire        requestAIO_2_2 = auto_in_2_a_bits_address[31:29] == 3'h3;	// @[Parameters.scala:137:{31,45,65}]
  wire        requestAIO_3_0 = auto_in_3_a_bits_address[31:29] == 3'h0 | {auto_in_3_a_bits_address[31:29] ^ 3'h2, auto_in_3_a_bits_address[16]} == 4'h0;	// @[Bundles.scala:259:74, Parameters.scala:137:{31,45,65}, Xbar.scala:366:92]
  wire        requestAIO_3_1 = auto_in_3_a_bits_address[31:29] == 3'h4;	// @[Parameters.scala:54:32, :137:{45,65}]
  wire        requestAIO_3_2 = auto_in_3_a_bits_address[31:29] == 3'h3;	// @[Parameters.scala:137:{31,45,65}]
  wire        requestAIO_4_0 = auto_in_4_a_bits_address[31:29] == 3'h0 | {auto_in_4_a_bits_address[31:29] ^ 3'h2, auto_in_4_a_bits_address[16]} == 4'h0;	// @[Bundles.scala:259:74, Parameters.scala:137:{31,45,65}, Xbar.scala:366:92]
  wire        requestAIO_4_1 = auto_in_4_a_bits_address[31:29] == 3'h4;	// @[Parameters.scala:54:32, :137:{45,65}]
  wire        requestAIO_4_2 = auto_in_4_a_bits_address[31:29] == 3'h3;	// @[Parameters.scala:137:{31,45,65}]
  wire        requestBOI_1_2 = auto_out_1_b_bits_source[4:2] == 3'h6;	// @[Parameters.scala:54:{10,32}]
  wire        requestBOI_1_3 = auto_out_1_b_bits_source[4:2] == 3'h5;	// @[Parameters.scala:54:{10,32}]
  wire        requestBOI_1_4 = auto_out_1_b_bits_source[4:2] == 3'h4;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_0_2 = auto_out_0_d_bits_source[4:2] == 3'h6;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_0_3 = auto_out_0_d_bits_source[4:2] == 3'h5;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_0_4 = auto_out_0_d_bits_source[4:2] == 3'h4;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_1_2 = auto_out_1_d_bits_source[4:2] == 3'h6;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_1_3 = auto_out_1_d_bits_source[4:2] == 3'h5;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_1_4 = auto_out_1_d_bits_source[4:2] == 3'h4;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_2_2 = auto_out_2_d_bits_source[4:2] == 3'h6;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_2_3 = auto_out_2_d_bits_source[4:2] == 3'h5;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_2_4 = auto_out_2_d_bits_source[4:2] == 3'h4;	// @[Parameters.scala:54:{10,32}]
  wire        portsAOI_filtered_0_earlyValid = auto_in_0_a_valid & requestAIO_0_0;	// @[Xbar.scala:366:92, :431:50]
  wire        portsAOI_filtered_1_earlyValid = auto_in_0_a_valid & requestAIO_0_1;	// @[Parameters.scala:137:65, Xbar.scala:431:50]
  wire        portsAOI_filtered_2_earlyValid = auto_in_0_a_valid & requestAIO_0_2;	// @[Parameters.scala:137:65, Xbar.scala:431:50]
  wire        _portsAOI_in_0_a_ready_WIRE = requestAIO_0_0 & auto_out_0_a_ready & allowed_0 | requestAIO_0_1 & auto_out_1_a_ready & allowed_1_0 | requestAIO_0_2 & auto_out_2_a_ready & allowed_4_0;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:137:65, Xbar.scala:366:92]
  wire        portsAOI_filtered_1_0_earlyValid = auto_in_1_a_valid & requestAIO_1_0;	// @[Xbar.scala:366:92, :431:50]
  wire        portsAOI_filtered_1_1_earlyValid = auto_in_1_a_valid & requestAIO_1_1;	// @[Parameters.scala:137:65, Xbar.scala:431:50]
  wire        portsAOI_filtered_1_2_earlyValid = auto_in_1_a_valid & requestAIO_1_2;	// @[Parameters.scala:137:65, Xbar.scala:431:50]
  wire        _portsAOI_in_1_a_ready_WIRE = requestAIO_1_0 & auto_out_0_a_ready & allowed_1 | requestAIO_1_1 & auto_out_1_a_ready & allowed_1_1 | requestAIO_1_2 & auto_out_2_a_ready & allowed_4_1;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:137:65, Xbar.scala:366:92]
  wire        portsAOI_filtered_2_0_earlyValid = auto_in_2_a_valid & requestAIO_2_0;	// @[Xbar.scala:366:92, :431:50]
  wire        portsAOI_filtered_2_1_earlyValid = auto_in_2_a_valid & requestAIO_2_1;	// @[Parameters.scala:137:65, Xbar.scala:431:50]
  wire        portsAOI_filtered_2_2_earlyValid = auto_in_2_a_valid & requestAIO_2_2;	// @[Parameters.scala:137:65, Xbar.scala:431:50]
  wire        _portsAOI_in_2_a_ready_WIRE = requestAIO_2_0 & auto_out_0_a_ready & allowed_2 | requestAIO_2_1 & auto_out_1_a_ready & allowed_1_2 | requestAIO_2_2 & auto_out_2_a_ready & allowed_4_2;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:137:65, Xbar.scala:366:92]
  wire        portsAOI_filtered_3_0_earlyValid = auto_in_3_a_valid & requestAIO_3_0;	// @[Xbar.scala:366:92, :431:50]
  wire        portsAOI_filtered_3_1_earlyValid = auto_in_3_a_valid & requestAIO_3_1;	// @[Parameters.scala:137:65, Xbar.scala:431:50]
  wire        portsAOI_filtered_3_2_earlyValid = auto_in_3_a_valid & requestAIO_3_2;	// @[Parameters.scala:137:65, Xbar.scala:431:50]
  wire        _portsAOI_in_3_a_ready_WIRE = requestAIO_3_0 & auto_out_0_a_ready & allowed_3 | requestAIO_3_1 & auto_out_1_a_ready & allowed_1_3 | requestAIO_3_2 & auto_out_2_a_ready & allowed_4_3;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:137:65, Xbar.scala:366:92]
  wire        portsAOI_filtered_4_0_earlyValid = auto_in_4_a_valid & requestAIO_4_0;	// @[Xbar.scala:366:92, :431:50]
  wire        portsAOI_filtered_4_1_earlyValid = auto_in_4_a_valid & requestAIO_4_1;	// @[Parameters.scala:137:65, Xbar.scala:431:50]
  wire        portsAOI_filtered_4_2_earlyValid = auto_in_4_a_valid & requestAIO_4_2;	// @[Parameters.scala:137:65, Xbar.scala:431:50]
  wire        _portsAOI_in_4_a_ready_WIRE = requestAIO_4_0 & auto_out_0_a_ready & allowed_4 | requestAIO_4_1 & auto_out_1_a_ready & allowed_1_4 | requestAIO_4_2 & auto_out_2_a_ready & allowed_4_4;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:137:65, Xbar.scala:366:92]
  wire        out_26_valid = auto_out_1_b_valid & (&(auto_out_1_b_bits_source[4:2]));	// @[Parameters.scala:54:{10,32}, Xbar.scala:182:40]
  wire        out_32_valid = auto_out_1_b_valid & requestBOI_1_2;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_38_valid = auto_out_1_b_valid & requestBOI_1_3;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_44_valid = auto_out_1_b_valid & requestBOI_1_4;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_21_earlyValid = auto_out_0_d_valid & ~(auto_out_0_d_bits_source[4]);	// @[Parameters.scala:54:{10,32}, Xbar.scala:182:40]
  wire        out_27_earlyValid = auto_out_0_d_valid & (&(auto_out_0_d_bits_source[4:2]));	// @[Parameters.scala:54:{10,32}, Xbar.scala:182:40]
  wire        out_33_earlyValid = auto_out_0_d_valid & requestDOI_0_2;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_39_earlyValid = auto_out_0_d_valid & requestDOI_0_3;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_45_earlyValid = auto_out_0_d_valid & requestDOI_0_4;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_22_earlyValid = auto_out_1_d_valid & ~(auto_out_1_d_bits_source[4]);	// @[Parameters.scala:54:{10,32}, Xbar.scala:182:40]
  wire        out_28_earlyValid = auto_out_1_d_valid & (&(auto_out_1_d_bits_source[4:2]));	// @[Parameters.scala:54:{10,32}, Xbar.scala:182:40]
  wire        out_34_earlyValid = auto_out_1_d_valid & requestDOI_1_2;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_40_earlyValid = auto_out_1_d_valid & requestDOI_1_3;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_46_earlyValid = auto_out_1_d_valid & requestDOI_1_4;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_23_earlyValid = auto_out_2_d_valid & ~(auto_out_2_d_bits_source[4]);	// @[Parameters.scala:54:{10,32}, Xbar.scala:182:40]
  wire        out_29_earlyValid = auto_out_2_d_valid & (&(auto_out_2_d_bits_source[4:2]));	// @[Parameters.scala:54:{10,32}, Xbar.scala:182:40]
  wire        out_35_earlyValid = auto_out_2_d_valid & requestDOI_2_2;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_41_earlyValid = auto_out_2_d_valid & requestDOI_2_3;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_47_earlyValid = auto_out_2_d_valid & requestDOI_2_4;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  reg  [8:0]  beatsLeft;	// @[Arbiter.scala:88:30]
  wire        idle = beatsLeft == 9'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [4:0]  readys_valid = {portsAOI_filtered_4_0_earlyValid, portsAOI_filtered_3_0_earlyValid, portsAOI_filtered_2_0_earlyValid, portsAOI_filtered_1_0_earlyValid, portsAOI_filtered_0_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:431:50]
  reg  [4:0]  readys_mask;	// @[Arbiter.scala:24:23]
  wire [4:0]  _readys_filter_T_1 = readys_valid & ~readys_mask;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [3:0]  _GEN = _readys_filter_T_1[3:0] | _readys_filter_T_1[4:1];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire        _GEN_0 = portsAOI_filtered_4_0_earlyValid | _readys_filter_T_1[0];	// @[Arbiter.scala:25:28, Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_1 = portsAOI_filtered_3_0_earlyValid | portsAOI_filtered_4_0_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_2 = _GEN[2] | _readys_filter_T_1[4];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire [1:0]  _GEN_3 = _GEN[1:0] | _GEN[3:2];	// @[package.scala:254:43]
  wire [4:0]  readys_readys = ~({readys_mask[4], _readys_filter_T_1[4] | readys_mask[3], _GEN[3] | readys_mask[2], _GEN_2 | readys_mask[1], _GEN_3[1] | readys_mask[0]} & {_GEN_3[0] | _readys_filter_T_1[4], _GEN_0 | _GEN[1] | _GEN[3], _GEN_1 | _GEN[0] | _GEN_2, portsAOI_filtered_2_0_earlyValid | portsAOI_filtered_3_0_earlyValid | _GEN_0 | _GEN_3[1], portsAOI_filtered_1_0_earlyValid | portsAOI_filtered_2_0_earlyValid | _GEN_1 | _GEN_3[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:431:50, package.scala:254:43]
  wire        earlyWinner_0 = readys_readys[0] & portsAOI_filtered_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_1 = readys_readys[1] & portsAOI_filtered_1_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_2 = readys_readys[2] & portsAOI_filtered_2_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_3 = readys_readys[3] & portsAOI_filtered_3_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_4 = readys_readys[4] & portsAOI_filtered_4_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        _out_0_a_earlyValid_T = portsAOI_filtered_0_earlyValid | portsAOI_filtered_1_0_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:431:50]
  reg         state_0;	// @[Arbiter.scala:117:26]
  reg         state_1;	// @[Arbiter.scala:117:26]
  reg         state_2;	// @[Arbiter.scala:117:26]
  reg         state_3;	// @[Arbiter.scala:117:26]
  reg         state_4;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_0 = idle ? earlyWinner_0 : state_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_1 = idle ? earlyWinner_1 : state_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_2 = idle ? earlyWinner_2 : state_2;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_3 = idle ? earlyWinner_3 : state_3;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_4 = idle ? earlyWinner_4 : state_4;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_0 = idle ? readys_readys[0] : state_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_1 = idle ? readys_readys[1] : state_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_2 = idle ? readys_readys[2] : state_2;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_3 = idle ? readys_readys[3] : state_3;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_4 = idle ? readys_readys[4] : state_4;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        x1_out_1_valid = idle ? _out_0_a_earlyValid_T | portsAOI_filtered_2_0_earlyValid | portsAOI_filtered_3_0_earlyValid | portsAOI_filtered_4_0_earlyValid : state_0 & portsAOI_filtered_0_earlyValid | state_1 & portsAOI_filtered_1_0_earlyValid | state_2 & portsAOI_filtered_2_0_earlyValid | state_3 & portsAOI_filtered_3_0_earlyValid | state_4 & portsAOI_filtered_4_0_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:{29,56}, Mux.scala:27:73, Xbar.scala:431:50]
  reg  [8:0]  beatsLeft_1;	// @[Arbiter.scala:88:30]
  wire        idle_1 = beatsLeft_1 == 9'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [4:0]  readys_valid_1 = {portsAOI_filtered_4_1_earlyValid, portsAOI_filtered_3_1_earlyValid, portsAOI_filtered_2_1_earlyValid, portsAOI_filtered_1_1_earlyValid, portsAOI_filtered_1_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:431:50]
  reg  [4:0]  readys_mask_1;	// @[Arbiter.scala:24:23]
  wire [4:0]  _readys_filter_T_3 = readys_valid_1 & ~readys_mask_1;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [3:0]  _GEN_4 = _readys_filter_T_3[3:0] | _readys_filter_T_3[4:1];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire        _GEN_5 = portsAOI_filtered_4_1_earlyValid | _readys_filter_T_3[0];	// @[Arbiter.scala:25:28, Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_6 = portsAOI_filtered_3_1_earlyValid | portsAOI_filtered_4_1_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_7 = _GEN_4[2] | _readys_filter_T_3[4];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire [1:0]  _GEN_8 = _GEN_4[1:0] | _GEN_4[3:2];	// @[package.scala:254:43]
  wire [4:0]  readys_readys_1 = ~({readys_mask_1[4], _readys_filter_T_3[4] | readys_mask_1[3], _GEN_4[3] | readys_mask_1[2], _GEN_7 | readys_mask_1[1], _GEN_8[1] | readys_mask_1[0]} & {_GEN_8[0] | _readys_filter_T_3[4], _GEN_5 | _GEN_4[1] | _GEN_4[3], _GEN_6 | _GEN_4[0] | _GEN_7, portsAOI_filtered_2_1_earlyValid | portsAOI_filtered_3_1_earlyValid | _GEN_5 | _GEN_8[1], portsAOI_filtered_1_1_earlyValid | portsAOI_filtered_2_1_earlyValid | _GEN_6 | _GEN_8[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:431:50, package.scala:254:43]
  wire        earlyWinner_1_0 = readys_readys_1[0] & portsAOI_filtered_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_1_1 = readys_readys_1[1] & portsAOI_filtered_1_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_1_2 = readys_readys_1[2] & portsAOI_filtered_2_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_1_3 = readys_readys_1[3] & portsAOI_filtered_3_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_1_4 = readys_readys_1[4] & portsAOI_filtered_4_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        _out_1_a_earlyValid_T = portsAOI_filtered_1_earlyValid | portsAOI_filtered_1_1_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:431:50]
  reg         state_1_0;	// @[Arbiter.scala:117:26]
  reg         state_1_1;	// @[Arbiter.scala:117:26]
  reg         state_1_2;	// @[Arbiter.scala:117:26]
  reg         state_1_3;	// @[Arbiter.scala:117:26]
  reg         state_1_4;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_1_0 = idle_1 ? earlyWinner_1_0 : state_1_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_1_1 = idle_1 ? earlyWinner_1_1 : state_1_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_1_2 = idle_1 ? earlyWinner_1_2 : state_1_2;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_1_3 = idle_1 ? earlyWinner_1_3 : state_1_3;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_1_4 = idle_1 ? earlyWinner_1_4 : state_1_4;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_1_0 = idle_1 ? readys_readys_1[0] : state_1_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_1_1 = idle_1 ? readys_readys_1[1] : state_1_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_1_2 = idle_1 ? readys_readys_1[2] : state_1_2;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_1_3 = idle_1 ? readys_readys_1[3] : state_1_3;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_1_4 = idle_1 ? readys_readys_1[4] : state_1_4;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        bundleOut_1_out_1_valid = idle_1 ? _out_1_a_earlyValid_T | portsAOI_filtered_2_1_earlyValid | portsAOI_filtered_3_1_earlyValid | portsAOI_filtered_4_1_earlyValid : state_1_0 & portsAOI_filtered_1_earlyValid | state_1_1 & portsAOI_filtered_1_1_earlyValid | state_1_2 & portsAOI_filtered_2_1_earlyValid | state_1_3 & portsAOI_filtered_3_1_earlyValid | state_1_4 & portsAOI_filtered_4_1_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:{29,56}, Mux.scala:27:73, Xbar.scala:431:50]
  reg  [8:0]  beatsLeft_2;	// @[Arbiter.scala:88:30]
  wire        idle_2 = beatsLeft_2 == 9'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [3:0]  readys_valid_2 = {auto_in_4_c_valid, auto_in_3_c_valid, auto_in_2_c_valid, auto_in_1_c_valid};	// @[Cat.scala:33:92]
  reg  [3:0]  readys_mask_2;	// @[Arbiter.scala:24:23]
  wire [3:0]  _readys_filter_T_5 = readys_valid_2 & ~readys_mask_2;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [2:0]  _GEN_9 = _readys_filter_T_5[2:0] | _readys_filter_T_5[3:1];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire        _GEN_10 = auto_in_4_c_valid | _readys_filter_T_5[0];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire [3:0]  readys_readys_2 = ~({readys_mask_2[3], _readys_filter_T_5[3] | readys_mask_2[2], _GEN_9[2] | readys_mask_2[1], _GEN_9[1] | _readys_filter_T_5[3] | readys_mask_2[0]} & {_GEN_9[0] | _GEN_9[2], _GEN_10 | _GEN_9[1], auto_in_3_c_valid | auto_in_4_c_valid | _GEN_9[0], auto_in_2_c_valid | auto_in_3_c_valid | _GEN_10});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, package.scala:254:43]
  wire        earlyWinner_2_0 = readys_readys_2[0] & auto_in_1_c_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_2_1 = readys_readys_2[1] & auto_in_2_c_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_2_2 = readys_readys_2[2] & auto_in_3_c_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_2_3 = readys_readys_2[3] & auto_in_4_c_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        _sink_ACancel_earlyValid_T = auto_in_1_c_valid | auto_in_2_c_valid;	// @[Arbiter.scala:108:36]
  reg         state_2_0;	// @[Arbiter.scala:117:26]
  reg         state_2_1;	// @[Arbiter.scala:117:26]
  reg         state_2_2;	// @[Arbiter.scala:117:26]
  reg         state_2_3;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_2_0 = idle_2 ? earlyWinner_2_0 : state_2_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_2_1 = idle_2 ? earlyWinner_2_1 : state_2_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_2_2 = idle_2 ? earlyWinner_2_2 : state_2_2;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_2_3 = idle_2 ? earlyWinner_2_3 : state_2_3;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        out_8_ready = auto_out_1_c_ready & (idle_2 ? readys_readys_2[0] : state_2_0);	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24, :124:31]
  wire        out_9_ready = auto_out_1_c_ready & (idle_2 ? readys_readys_2[1] : state_2_1);	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24, :124:31]
  wire        out_10_ready = auto_out_1_c_ready & (idle_2 ? readys_readys_2[2] : state_2_2);	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24, :124:31]
  wire        out_11_ready = auto_out_1_c_ready & (idle_2 ? readys_readys_2[3] : state_2_3);	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24, :124:31]
  wire        bundleOut_1_out_c_valid = idle_2 ? _sink_ACancel_earlyValid_T | auto_in_3_c_valid | auto_in_4_c_valid : state_2_0 & auto_in_1_c_valid | state_2_1 & auto_in_2_c_valid | state_2_2 & auto_in_3_c_valid | state_2_3 & auto_in_4_c_valid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:{29,56}, Mux.scala:27:73]
  reg         beatsLeft_3;	// @[Arbiter.scala:88:30]
  wire [3:0]  readys_valid_3 = {auto_in_4_e_valid, auto_in_3_e_valid, auto_in_2_e_valid, auto_in_1_e_valid};	// @[Cat.scala:33:92]
  reg  [3:0]  readys_mask_3;	// @[Arbiter.scala:24:23]
  wire [3:0]  _readys_filter_T_7 = readys_valid_3 & ~readys_mask_3;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [2:0]  _GEN_11 = _readys_filter_T_7[2:0] | _readys_filter_T_7[3:1];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire        _GEN_12 = auto_in_4_e_valid | _readys_filter_T_7[0];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire [3:0]  readys_readys_3 = ~({readys_mask_3[3], _readys_filter_T_7[3] | readys_mask_3[2], _GEN_11[2] | readys_mask_3[1], _GEN_11[1] | _readys_filter_T_7[3] | readys_mask_3[0]} & {_GEN_11[0] | _GEN_11[2], _GEN_12 | _GEN_11[1], auto_in_3_e_valid | auto_in_4_e_valid | _GEN_11[0], auto_in_2_e_valid | auto_in_3_e_valid | _GEN_12});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, package.scala:254:43]
  wire        earlyWinner_3_0 = readys_readys_3[0] & auto_in_1_e_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_3_1 = readys_readys_3[1] & auto_in_2_e_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_3_2 = readys_readys_3[2] & auto_in_3_e_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_3_3 = readys_readys_3[3] & auto_in_4_e_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        _sink_ACancel_earlyValid_T_11 = auto_in_1_e_valid | auto_in_2_e_valid;	// @[Arbiter.scala:108:36]
  reg         state_3_0;	// @[Arbiter.scala:117:26]
  reg         state_3_1;	// @[Arbiter.scala:117:26]
  reg         state_3_2;	// @[Arbiter.scala:117:26]
  reg         state_3_3;	// @[Arbiter.scala:117:26]
  wire        out_13_ready = beatsLeft_3 ? state_3_0 : readys_readys_3[0];	// @[Arbiter.scala:27:18, :88:30, :96:86, :117:26, :122:24]
  wire        out_14_ready = beatsLeft_3 ? state_3_1 : readys_readys_3[1];	// @[Arbiter.scala:27:18, :88:30, :96:86, :117:26, :122:24]
  wire        out_15_ready = beatsLeft_3 ? state_3_2 : readys_readys_3[2];	// @[Arbiter.scala:27:18, :88:30, :96:86, :117:26, :122:24]
  wire        out_16_ready = beatsLeft_3 ? state_3_3 : readys_readys_3[3];	// @[Arbiter.scala:27:18, :88:30, :96:86, :117:26, :122:24]
  wire        bundleOut_1_out_e_valid = beatsLeft_3 ? state_3_0 & auto_in_1_e_valid | state_3_1 & auto_in_2_e_valid | state_3_2 & auto_in_3_e_valid | state_3_3 & auto_in_4_e_valid : _sink_ACancel_earlyValid_T_11 | auto_in_3_e_valid | auto_in_4_e_valid;	// @[Arbiter.scala:88:30, :108:36, :117:26, :126:{29,56}, Mux.scala:27:73]
  reg  [8:0]  beatsLeft_4;	// @[Arbiter.scala:88:30]
  wire        idle_4 = beatsLeft_4 == 9'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [4:0]  readys_valid_4 = {portsAOI_filtered_4_2_earlyValid, portsAOI_filtered_3_2_earlyValid, portsAOI_filtered_2_2_earlyValid, portsAOI_filtered_1_2_earlyValid, portsAOI_filtered_2_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:431:50]
  reg  [4:0]  readys_mask_4;	// @[Arbiter.scala:24:23]
  wire [4:0]  _readys_filter_T_9 = readys_valid_4 & ~readys_mask_4;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [3:0]  _GEN_13 = _readys_filter_T_9[3:0] | _readys_filter_T_9[4:1];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire        _GEN_14 = portsAOI_filtered_4_2_earlyValid | _readys_filter_T_9[0];	// @[Arbiter.scala:25:28, Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_15 = portsAOI_filtered_3_2_earlyValid | portsAOI_filtered_4_2_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_16 = _GEN_13[2] | _readys_filter_T_9[4];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire [1:0]  _GEN_17 = _GEN_13[1:0] | _GEN_13[3:2];	// @[package.scala:254:43]
  wire [4:0]  readys_readys_4 = ~({readys_mask_4[4], _readys_filter_T_9[4] | readys_mask_4[3], _GEN_13[3] | readys_mask_4[2], _GEN_16 | readys_mask_4[1], _GEN_17[1] | readys_mask_4[0]} & {_GEN_17[0] | _readys_filter_T_9[4], _GEN_14 | _GEN_13[1] | _GEN_13[3], _GEN_15 | _GEN_13[0] | _GEN_16, portsAOI_filtered_2_2_earlyValid | portsAOI_filtered_3_2_earlyValid | _GEN_14 | _GEN_17[1], portsAOI_filtered_1_2_earlyValid | portsAOI_filtered_2_2_earlyValid | _GEN_15 | _GEN_17[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:431:50, package.scala:254:43]
  wire        earlyWinner_4_0 = readys_readys_4[0] & portsAOI_filtered_2_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_4_1 = readys_readys_4[1] & portsAOI_filtered_1_2_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_4_2 = readys_readys_4[2] & portsAOI_filtered_2_2_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_4_3 = readys_readys_4[3] & portsAOI_filtered_3_2_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_4_4 = readys_readys_4[4] & portsAOI_filtered_4_2_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        _out_2_a_earlyValid_T = portsAOI_filtered_2_earlyValid | portsAOI_filtered_1_2_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:431:50]
  reg         state_4_0;	// @[Arbiter.scala:117:26]
  reg         state_4_1;	// @[Arbiter.scala:117:26]
  reg         state_4_2;	// @[Arbiter.scala:117:26]
  reg         state_4_3;	// @[Arbiter.scala:117:26]
  reg         state_4_4;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_4_0 = idle_4 ? earlyWinner_4_0 : state_4_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_4_1 = idle_4 ? earlyWinner_4_1 : state_4_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_4_2 = idle_4 ? earlyWinner_4_2 : state_4_2;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_4_3 = idle_4 ? earlyWinner_4_3 : state_4_3;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_4_4 = idle_4 ? earlyWinner_4_4 : state_4_4;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_4_0 = idle_4 ? readys_readys_4[0] : state_4_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_4_1 = idle_4 ? readys_readys_4[1] : state_4_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_4_2 = idle_4 ? readys_readys_4[2] : state_4_2;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_4_3 = idle_4 ? readys_readys_4[3] : state_4_3;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_4_4 = idle_4 ? readys_readys_4[4] : state_4_4;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        bundleOut_2_out_1_valid = idle_4 ? _out_2_a_earlyValid_T | portsAOI_filtered_2_2_earlyValid | portsAOI_filtered_3_2_earlyValid | portsAOI_filtered_4_2_earlyValid : state_4_0 & portsAOI_filtered_2_earlyValid | state_4_1 & portsAOI_filtered_1_2_earlyValid | state_4_2 & portsAOI_filtered_2_2_earlyValid | state_4_3 & portsAOI_filtered_3_2_earlyValid | state_4_4 & portsAOI_filtered_4_2_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:{29,56}, Mux.scala:27:73, Xbar.scala:431:50]
  reg  [8:0]  beatsLeft_5;	// @[Arbiter.scala:88:30]
  wire        idle_5 = beatsLeft_5 == 9'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [2:0]  readys_valid_5 = {out_23_earlyValid, out_22_earlyValid, out_21_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:182:40]
  reg  [2:0]  readys_mask_5;	// @[Arbiter.scala:24:23]
  wire [2:0]  _readys_filter_T_11 = readys_valid_5 & ~readys_mask_5;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [1:0]  _GEN_18 = _readys_filter_T_11[1:0] | _readys_filter_T_11[2:1];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire [2:0]  readys_readys_5 = ~({readys_mask_5[2], _readys_filter_T_11[2] | readys_mask_5[1], _GEN_18[1] | readys_mask_5[0]} & {_GEN_18[0] | _readys_filter_T_11[2], out_23_earlyValid | _readys_filter_T_11[0] | _GEN_18[1], out_22_earlyValid | out_23_earlyValid | _GEN_18[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:182:40, package.scala:254:43]
  wire        earlyWinner_5_0 = readys_readys_5[0] & out_21_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_5_1 = readys_readys_5[1] & out_22_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_5_2 = readys_readys_5[2] & out_23_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        _sink_ACancel_earlyValid_T_22 = out_21_earlyValid | out_22_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:182:40]
  reg         state_5_0;	// @[Arbiter.scala:117:26]
  reg         state_5_1;	// @[Arbiter.scala:117:26]
  reg         state_5_2;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_5_0 = idle_5 ? earlyWinner_5_0 : state_5_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_5_1 = idle_5 ? earlyWinner_5_1 : state_5_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_5_2 = idle_5 ? earlyWinner_5_2 : state_5_2;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_5_0 = idle_5 ? readys_readys_5[0] : state_5_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_5_1 = idle_5 ? readys_readys_5[1] : state_5_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_5_2 = idle_5 ? readys_readys_5[2] : state_5_2;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        out_24_valid = idle_5 ? _sink_ACancel_earlyValid_T_22 | out_23_earlyValid : state_5_0 & out_21_earlyValid | state_5_1 & out_22_earlyValid | state_5_2 & out_23_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:{29,56}, Mux.scala:27:73, Xbar.scala:182:40]
  wire        out_24_bits_corrupt = muxStateEarly_5_0 & auto_out_0_d_bits_corrupt | muxStateEarly_5_1 & auto_out_1_d_bits_corrupt | muxStateEarly_5_2 & auto_out_2_d_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire        out_24_bits_denied = muxStateEarly_5_0 & auto_out_0_d_bits_denied | muxStateEarly_5_1 & auto_out_1_d_bits_denied | muxStateEarly_5_2 & auto_out_2_d_bits_denied;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [2:0]  out_24_bits_sink = (muxStateEarly_5_0 ? out_45_bits_sink : 3'h0) | (muxStateEarly_5_1 ? auto_out_1_d_bits_sink : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73, Xbar.scala:326:28]
  wire [3:0]  out_d_bits_source = (muxStateEarly_5_0 ? auto_out_0_d_bits_source[3:0] : 4'h0) | (muxStateEarly_5_1 ? auto_out_1_d_bits_source[3:0] : 4'h0) | (muxStateEarly_5_2 ? auto_out_2_d_bits_source[3:0] : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [3:0]  out_24_bits_size = (muxStateEarly_5_0 ? auto_out_0_d_bits_size : 4'h0) | (muxStateEarly_5_1 ? out_46_bits_size : 4'h0) | (muxStateEarly_5_2 ? auto_out_2_d_bits_size : 4'h0);	// @[Arbiter.scala:118:30, BundleMap.scala:247:19, Bundles.scala:259:74, Mux.scala:27:73]
  wire [1:0]  out_24_bits_param = (muxStateEarly_5_0 ? auto_out_0_d_bits_param : 2'h0) | (muxStateEarly_5_1 ? auto_out_1_d_bits_param : 2'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [2:0]  out_24_bits_opcode = (muxStateEarly_5_0 ? auto_out_0_d_bits_opcode : 3'h0) | (muxStateEarly_5_1 ? auto_out_1_d_bits_opcode : 3'h0) | (muxStateEarly_5_2 ? auto_out_2_d_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  reg  [8:0]  beatsLeft_6;	// @[Arbiter.scala:88:30]
  wire        idle_6 = beatsLeft_6 == 9'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [2:0]  readys_valid_6 = {out_29_earlyValid, out_28_earlyValid, out_27_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:182:40]
  reg  [2:0]  readys_mask_6;	// @[Arbiter.scala:24:23]
  wire [2:0]  _readys_filter_T_13 = readys_valid_6 & ~readys_mask_6;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [1:0]  _GEN_19 = _readys_filter_T_13[1:0] | _readys_filter_T_13[2:1];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire [2:0]  readys_readys_6 = ~({readys_mask_6[2], _readys_filter_T_13[2] | readys_mask_6[1], _GEN_19[1] | readys_mask_6[0]} & {_GEN_19[0] | _readys_filter_T_13[2], out_29_earlyValid | _readys_filter_T_13[0] | _GEN_19[1], out_28_earlyValid | out_29_earlyValid | _GEN_19[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:182:40, package.scala:254:43]
  wire        earlyWinner_6_0 = readys_readys_6[0] & out_27_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_6_1 = readys_readys_6[1] & out_28_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_6_2 = readys_readys_6[2] & out_29_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        _sink_ACancel_earlyValid_T_30 = out_27_earlyValid | out_28_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:182:40]
  reg         state_6_0;	// @[Arbiter.scala:117:26]
  reg         state_6_1;	// @[Arbiter.scala:117:26]
  reg         state_6_2;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_6_0 = idle_6 ? earlyWinner_6_0 : state_6_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_6_1 = idle_6 ? earlyWinner_6_1 : state_6_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_6_2 = idle_6 ? earlyWinner_6_2 : state_6_2;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_6_0 = idle_6 ? readys_readys_6[0] : state_6_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_6_1 = idle_6 ? readys_readys_6[1] : state_6_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_6_2 = idle_6 ? readys_readys_6[2] : state_6_2;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        out_30_valid = idle_6 ? _sink_ACancel_earlyValid_T_30 | out_29_earlyValid : state_6_0 & out_27_earlyValid | state_6_1 & out_28_earlyValid | state_6_2 & out_29_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:{29,56}, Mux.scala:27:73, Xbar.scala:182:40]
  wire        out_30_bits_corrupt = muxStateEarly_6_0 & auto_out_0_d_bits_corrupt | muxStateEarly_6_1 & auto_out_1_d_bits_corrupt | muxStateEarly_6_2 & auto_out_2_d_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire        out_30_bits_denied = muxStateEarly_6_0 & auto_out_0_d_bits_denied | muxStateEarly_6_1 & auto_out_1_d_bits_denied | muxStateEarly_6_2 & auto_out_2_d_bits_denied;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [2:0]  out_30_bits_sink = (muxStateEarly_6_0 ? out_45_bits_sink : 3'h0) | (muxStateEarly_6_1 ? auto_out_1_d_bits_sink : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73, Xbar.scala:326:28]
  wire [1:0]  out_1_d_bits_source = (muxStateEarly_6_0 ? auto_out_0_d_bits_source[1:0] : 2'h0) | (muxStateEarly_6_1 ? auto_out_1_d_bits_source[1:0] : 2'h0) | (muxStateEarly_6_2 ? auto_out_2_d_bits_source[1:0] : 2'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [3:0]  out_30_bits_size = (muxStateEarly_6_0 ? auto_out_0_d_bits_size : 4'h0) | (muxStateEarly_6_1 ? out_46_bits_size : 4'h0) | (muxStateEarly_6_2 ? auto_out_2_d_bits_size : 4'h0);	// @[Arbiter.scala:118:30, BundleMap.scala:247:19, Bundles.scala:259:74, Mux.scala:27:73]
  wire [1:0]  out_30_bits_param = (muxStateEarly_6_0 ? auto_out_0_d_bits_param : 2'h0) | (muxStateEarly_6_1 ? auto_out_1_d_bits_param : 2'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [2:0]  out_30_bits_opcode = (muxStateEarly_6_0 ? auto_out_0_d_bits_opcode : 3'h0) | (muxStateEarly_6_1 ? auto_out_1_d_bits_opcode : 3'h0) | (muxStateEarly_6_2 ? auto_out_2_d_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  reg  [8:0]  beatsLeft_7;	// @[Arbiter.scala:88:30]
  wire        idle_7 = beatsLeft_7 == 9'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [2:0]  readys_valid_7 = {out_35_earlyValid, out_34_earlyValid, out_33_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:182:40]
  reg  [2:0]  readys_mask_7;	// @[Arbiter.scala:24:23]
  wire [2:0]  _readys_filter_T_15 = readys_valid_7 & ~readys_mask_7;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [1:0]  _GEN_20 = _readys_filter_T_15[1:0] | _readys_filter_T_15[2:1];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire [2:0]  readys_readys_7 = ~({readys_mask_7[2], _readys_filter_T_15[2] | readys_mask_7[1], _GEN_20[1] | readys_mask_7[0]} & {_GEN_20[0] | _readys_filter_T_15[2], out_35_earlyValid | _readys_filter_T_15[0] | _GEN_20[1], out_34_earlyValid | out_35_earlyValid | _GEN_20[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:182:40, package.scala:254:43]
  wire        earlyWinner_7_0 = readys_readys_7[0] & out_33_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_7_1 = readys_readys_7[1] & out_34_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_7_2 = readys_readys_7[2] & out_35_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        _sink_ACancel_earlyValid_T_38 = out_33_earlyValid | out_34_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:182:40]
  reg         state_7_0;	// @[Arbiter.scala:117:26]
  reg         state_7_1;	// @[Arbiter.scala:117:26]
  reg         state_7_2;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_7_0 = idle_7 ? earlyWinner_7_0 : state_7_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_7_1 = idle_7 ? earlyWinner_7_1 : state_7_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_7_2 = idle_7 ? earlyWinner_7_2 : state_7_2;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_7_0 = idle_7 ? readys_readys_7[0] : state_7_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_7_1 = idle_7 ? readys_readys_7[1] : state_7_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_7_2 = idle_7 ? readys_readys_7[2] : state_7_2;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        out_36_valid = idle_7 ? _sink_ACancel_earlyValid_T_38 | out_35_earlyValid : state_7_0 & out_33_earlyValid | state_7_1 & out_34_earlyValid | state_7_2 & out_35_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:{29,56}, Mux.scala:27:73, Xbar.scala:182:40]
  wire        out_36_bits_corrupt = muxStateEarly_7_0 & auto_out_0_d_bits_corrupt | muxStateEarly_7_1 & auto_out_1_d_bits_corrupt | muxStateEarly_7_2 & auto_out_2_d_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire        out_36_bits_denied = muxStateEarly_7_0 & auto_out_0_d_bits_denied | muxStateEarly_7_1 & auto_out_1_d_bits_denied | muxStateEarly_7_2 & auto_out_2_d_bits_denied;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [2:0]  out_36_bits_sink = (muxStateEarly_7_0 ? out_45_bits_sink : 3'h0) | (muxStateEarly_7_1 ? auto_out_1_d_bits_sink : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73, Xbar.scala:326:28]
  wire [1:0]  out_2_d_bits_source = (muxStateEarly_7_0 ? auto_out_0_d_bits_source[1:0] : 2'h0) | (muxStateEarly_7_1 ? auto_out_1_d_bits_source[1:0] : 2'h0) | (muxStateEarly_7_2 ? auto_out_2_d_bits_source[1:0] : 2'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [3:0]  out_36_bits_size = (muxStateEarly_7_0 ? auto_out_0_d_bits_size : 4'h0) | (muxStateEarly_7_1 ? out_46_bits_size : 4'h0) | (muxStateEarly_7_2 ? auto_out_2_d_bits_size : 4'h0);	// @[Arbiter.scala:118:30, BundleMap.scala:247:19, Bundles.scala:259:74, Mux.scala:27:73]
  wire [1:0]  out_36_bits_param = (muxStateEarly_7_0 ? auto_out_0_d_bits_param : 2'h0) | (muxStateEarly_7_1 ? auto_out_1_d_bits_param : 2'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [2:0]  out_36_bits_opcode = (muxStateEarly_7_0 ? auto_out_0_d_bits_opcode : 3'h0) | (muxStateEarly_7_1 ? auto_out_1_d_bits_opcode : 3'h0) | (muxStateEarly_7_2 ? auto_out_2_d_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  reg  [8:0]  beatsLeft_8;	// @[Arbiter.scala:88:30]
  wire        idle_8 = beatsLeft_8 == 9'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [2:0]  readys_valid_8 = {out_41_earlyValid, out_40_earlyValid, out_39_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:182:40]
  reg  [2:0]  readys_mask_8;	// @[Arbiter.scala:24:23]
  wire [2:0]  _readys_filter_T_17 = readys_valid_8 & ~readys_mask_8;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [1:0]  _GEN_21 = _readys_filter_T_17[1:0] | _readys_filter_T_17[2:1];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire [2:0]  readys_readys_8 = ~({readys_mask_8[2], _readys_filter_T_17[2] | readys_mask_8[1], _GEN_21[1] | readys_mask_8[0]} & {_GEN_21[0] | _readys_filter_T_17[2], out_41_earlyValid | _readys_filter_T_17[0] | _GEN_21[1], out_40_earlyValid | out_41_earlyValid | _GEN_21[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:182:40, package.scala:254:43]
  wire        earlyWinner_8_0 = readys_readys_8[0] & out_39_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_8_1 = readys_readys_8[1] & out_40_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_8_2 = readys_readys_8[2] & out_41_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        _sink_ACancel_earlyValid_T_46 = out_39_earlyValid | out_40_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:182:40]
  reg         state_8_0;	// @[Arbiter.scala:117:26]
  reg         state_8_1;	// @[Arbiter.scala:117:26]
  reg         state_8_2;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_8_0 = idle_8 ? earlyWinner_8_0 : state_8_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_8_1 = idle_8 ? earlyWinner_8_1 : state_8_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_8_2 = idle_8 ? earlyWinner_8_2 : state_8_2;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_8_0 = idle_8 ? readys_readys_8[0] : state_8_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_8_1 = idle_8 ? readys_readys_8[1] : state_8_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_8_2 = idle_8 ? readys_readys_8[2] : state_8_2;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        out_42_valid = idle_8 ? _sink_ACancel_earlyValid_T_46 | out_41_earlyValid : state_8_0 & out_39_earlyValid | state_8_1 & out_40_earlyValid | state_8_2 & out_41_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:{29,56}, Mux.scala:27:73, Xbar.scala:182:40]
  wire        out_42_bits_corrupt = muxStateEarly_8_0 & auto_out_0_d_bits_corrupt | muxStateEarly_8_1 & auto_out_1_d_bits_corrupt | muxStateEarly_8_2 & auto_out_2_d_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire        out_42_bits_denied = muxStateEarly_8_0 & auto_out_0_d_bits_denied | muxStateEarly_8_1 & auto_out_1_d_bits_denied | muxStateEarly_8_2 & auto_out_2_d_bits_denied;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [2:0]  out_42_bits_sink = (muxStateEarly_8_0 ? out_45_bits_sink : 3'h0) | (muxStateEarly_8_1 ? auto_out_1_d_bits_sink : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73, Xbar.scala:326:28]
  wire [1:0]  out_3_d_bits_source = (muxStateEarly_8_0 ? auto_out_0_d_bits_source[1:0] : 2'h0) | (muxStateEarly_8_1 ? auto_out_1_d_bits_source[1:0] : 2'h0) | (muxStateEarly_8_2 ? auto_out_2_d_bits_source[1:0] : 2'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [3:0]  out_42_bits_size = (muxStateEarly_8_0 ? auto_out_0_d_bits_size : 4'h0) | (muxStateEarly_8_1 ? out_46_bits_size : 4'h0) | (muxStateEarly_8_2 ? auto_out_2_d_bits_size : 4'h0);	// @[Arbiter.scala:118:30, BundleMap.scala:247:19, Bundles.scala:259:74, Mux.scala:27:73]
  wire [1:0]  out_42_bits_param = (muxStateEarly_8_0 ? auto_out_0_d_bits_param : 2'h0) | (muxStateEarly_8_1 ? auto_out_1_d_bits_param : 2'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [2:0]  out_42_bits_opcode = (muxStateEarly_8_0 ? auto_out_0_d_bits_opcode : 3'h0) | (muxStateEarly_8_1 ? auto_out_1_d_bits_opcode : 3'h0) | (muxStateEarly_8_2 ? auto_out_2_d_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  reg  [8:0]  beatsLeft_9;	// @[Arbiter.scala:88:30]
  wire        idle_9 = beatsLeft_9 == 9'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [2:0]  readys_valid_9 = {out_47_earlyValid, out_46_earlyValid, out_45_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:182:40]
  reg  [2:0]  readys_mask_9;	// @[Arbiter.scala:24:23]
  wire [2:0]  _readys_filter_T_19 = readys_valid_9 & ~readys_mask_9;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [1:0]  _GEN_22 = _readys_filter_T_19[1:0] | _readys_filter_T_19[2:1];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire [2:0]  readys_readys_9 = ~({readys_mask_9[2], _readys_filter_T_19[2] | readys_mask_9[1], _GEN_22[1] | readys_mask_9[0]} & {_GEN_22[0] | _readys_filter_T_19[2], out_47_earlyValid | _readys_filter_T_19[0] | _GEN_22[1], out_46_earlyValid | out_47_earlyValid | _GEN_22[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:182:40, package.scala:254:43]
  wire        earlyWinner_9_0 = readys_readys_9[0] & out_45_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_9_1 = readys_readys_9[1] & out_46_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_9_2 = readys_readys_9[2] & out_47_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        _sink_ACancel_earlyValid_T_54 = out_45_earlyValid | out_46_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:182:40]
  reg         state_9_0;	// @[Arbiter.scala:117:26]
  reg         state_9_1;	// @[Arbiter.scala:117:26]
  reg         state_9_2;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_9_0 = idle_9 ? earlyWinner_9_0 : state_9_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_9_1 = idle_9 ? earlyWinner_9_1 : state_9_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_9_2 = idle_9 ? earlyWinner_9_2 : state_9_2;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_9_0 = idle_9 ? readys_readys_9[0] : state_9_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_9_1 = idle_9 ? readys_readys_9[1] : state_9_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_9_2 = idle_9 ? readys_readys_9[2] : state_9_2;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        out_48_valid = idle_9 ? _sink_ACancel_earlyValid_T_54 | out_47_earlyValid : state_9_0 & out_45_earlyValid | state_9_1 & out_46_earlyValid | state_9_2 & out_47_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:{29,56}, Mux.scala:27:73, Xbar.scala:182:40]
  wire        out_48_bits_corrupt = muxStateEarly_9_0 & auto_out_0_d_bits_corrupt | muxStateEarly_9_1 & auto_out_1_d_bits_corrupt | muxStateEarly_9_2 & auto_out_2_d_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire        out_48_bits_denied = muxStateEarly_9_0 & auto_out_0_d_bits_denied | muxStateEarly_9_1 & auto_out_1_d_bits_denied | muxStateEarly_9_2 & auto_out_2_d_bits_denied;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [2:0]  out_48_bits_sink = (muxStateEarly_9_0 ? out_45_bits_sink : 3'h0) | (muxStateEarly_9_1 ? auto_out_1_d_bits_sink : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73, Xbar.scala:326:28]
  wire [1:0]  out_4_d_bits_source = (muxStateEarly_9_0 ? auto_out_0_d_bits_source[1:0] : 2'h0) | (muxStateEarly_9_1 ? auto_out_1_d_bits_source[1:0] : 2'h0) | (muxStateEarly_9_2 ? auto_out_2_d_bits_source[1:0] : 2'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [3:0]  out_48_bits_size = (muxStateEarly_9_0 ? auto_out_0_d_bits_size : 4'h0) | (muxStateEarly_9_1 ? out_46_bits_size : 4'h0) | (muxStateEarly_9_2 ? auto_out_2_d_bits_size : 4'h0);	// @[Arbiter.scala:118:30, BundleMap.scala:247:19, Bundles.scala:259:74, Mux.scala:27:73]
  wire [1:0]  out_48_bits_param = (muxStateEarly_9_0 ? auto_out_0_d_bits_param : 2'h0) | (muxStateEarly_9_1 ? auto_out_1_d_bits_param : 2'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [2:0]  out_48_bits_opcode = (muxStateEarly_9_0 ? auto_out_0_d_bits_opcode : 3'h0) | (muxStateEarly_9_1 ? auto_out_1_d_bits_opcode : 3'h0) | (muxStateEarly_9_2 ? auto_out_2_d_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [4:0]  _readys_mask_T = readys_readys & readys_valid;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [4:0]  _readys_mask_T_3 = _readys_mask_T | {_readys_mask_T[3:0], 1'h0};	// @[Arbiter.scala:29:29, package.scala:245:{43,53}]
  wire [4:0]  _readys_mask_T_6 = _readys_mask_T_3 | {_readys_mask_T_3[2:0], 2'h0};	// @[package.scala:245:{43,53}]
  wire [4:0]  _readys_mask_T_11 = readys_readys_1 & readys_valid_1;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [4:0]  _readys_mask_T_14 = _readys_mask_T_11 | {_readys_mask_T_11[3:0], 1'h0};	// @[Arbiter.scala:29:29, package.scala:245:{43,53}]
  wire [4:0]  _readys_mask_T_17 = _readys_mask_T_14 | {_readys_mask_T_14[2:0], 2'h0};	// @[package.scala:245:{43,53}]
  wire [26:0] _beatsCI_decode_T_17 = 27'hFFF << auto_in_4_c_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsCI_decode_T_13 = 27'hFFF << auto_in_3_c_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsCI_decode_T_9 = 27'hFFF << auto_in_2_c_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsCI_decode_T_5 = 27'hFFF << auto_in_1_c_bits_size;	// @[package.scala:235:71]
  wire [3:0]  _readys_mask_T_22 = readys_readys_2 & readys_valid_2;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [3:0]  _readys_mask_T_25 = _readys_mask_T_22 | {_readys_mask_T_22[2:0], 1'h0};	// @[Arbiter.scala:29:29, package.scala:245:{43,53}]
  wire [3:0]  _readys_mask_T_30 = readys_readys_3 & readys_valid_3;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [3:0]  _readys_mask_T_33 = _readys_mask_T_30 | {_readys_mask_T_30[2:0], 1'h0};	// @[Arbiter.scala:29:29, package.scala:245:{43,53}]
  wire [4:0]  _readys_mask_T_38 = readys_readys_4 & readys_valid_4;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [4:0]  _readys_mask_T_41 = _readys_mask_T_38 | {_readys_mask_T_38[3:0], 1'h0};	// @[Arbiter.scala:29:29, package.scala:245:{43,53}]
  wire [4:0]  _readys_mask_T_44 = _readys_mask_T_41 | {_readys_mask_T_41[2:0], 2'h0};	// @[package.scala:245:{43,53}]
  wire [2:0]  _readys_mask_T_49 = readys_readys_5 & readys_valid_5;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [2:0]  _readys_mask_T_52 = _readys_mask_T_49 | {_readys_mask_T_49[1:0], 1'h0};	// @[Arbiter.scala:29:29, package.scala:245:{43,53}]
  wire [2:0]  _readys_mask_T_57 = readys_readys_6 & readys_valid_6;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [2:0]  _readys_mask_T_60 = _readys_mask_T_57 | {_readys_mask_T_57[1:0], 1'h0};	// @[Arbiter.scala:29:29, package.scala:245:{43,53}]
  wire [2:0]  _readys_mask_T_65 = readys_readys_7 & readys_valid_7;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [2:0]  _readys_mask_T_68 = _readys_mask_T_65 | {_readys_mask_T_65[1:0], 1'h0};	// @[Arbiter.scala:29:29, package.scala:245:{43,53}]
  wire [2:0]  _readys_mask_T_73 = readys_readys_8 & readys_valid_8;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [2:0]  _readys_mask_T_76 = _readys_mask_T_73 | {_readys_mask_T_73[1:0], 1'h0};	// @[Arbiter.scala:29:29, package.scala:245:{43,53}]
  wire [2:0]  _readys_mask_T_81 = readys_readys_9 & readys_valid_9;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [2:0]  _readys_mask_T_84 = _readys_mask_T_81 | {_readys_mask_T_81[1:0], 1'h0};	// @[Arbiter.scala:29:29, package.scala:245:{43,53}]
  wire [26:0] _beatsAI_decode_T_1 = 27'hFFF << auto_in_0_a_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsAI_decode_T_5 = 27'hFFF << auto_in_1_a_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsAI_decode_T_9 = 27'hFFF << auto_in_2_a_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsAI_decode_T_13 = 27'hFFF << auto_in_3_a_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsAI_decode_T_17 = 27'hFFF << auto_in_4_a_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsDO_decode_T_1 = 27'hFFF << auto_out_0_d_bits_size;	// @[package.scala:235:71]
  wire [20:0] _beatsDO_decode_T_5 = 21'h3F << auto_out_1_d_bits_size;	// @[package.scala:235:71]
  wire [22:0] _beatsDO_decode_T_9 = 23'hFF << auto_out_2_d_bits_size;	// @[package.scala:235:71]
  wire        latch = idle & auto_out_0_a_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_0 = readys_readys[0] & portsAOI_filtered_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_1 = readys_readys[1] & portsAOI_filtered_1_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_2 = readys_readys[2] & portsAOI_filtered_2_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_3 = readys_readys[3] & portsAOI_filtered_3_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_4 = readys_readys[4] & portsAOI_filtered_4_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        latch_1 = idle_1 & auto_out_1_a_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_1_0 = readys_readys_1[0] & portsAOI_filtered_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_1_1 = readys_readys_1[1] & portsAOI_filtered_1_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_1_2 = readys_readys_1[2] & portsAOI_filtered_2_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_1_3 = readys_readys_1[3] & portsAOI_filtered_3_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_1_4 = readys_readys_1[4] & portsAOI_filtered_4_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        latch_2 = idle_2 & auto_out_1_c_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_2_0 = readys_readys_2[0] & auto_in_1_c_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79]
  wire        winnerQual_2_1 = readys_readys_2[1] & auto_in_2_c_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79]
  wire        winnerQual_2_2 = readys_readys_2[2] & auto_in_3_c_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79]
  wire        winnerQual_2_3 = readys_readys_2[3] & auto_in_4_c_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79]
  wire        latch_4 = idle_4 & auto_out_2_a_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_4_0 = readys_readys_4[0] & portsAOI_filtered_2_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_4_1 = readys_readys_4[1] & portsAOI_filtered_1_2_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_4_2 = readys_readys_4[2] & portsAOI_filtered_2_2_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_4_3 = readys_readys_4[3] & portsAOI_filtered_3_2_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_4_4 = readys_readys_4[4] & portsAOI_filtered_4_2_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        latch_5 = idle_5 & auto_in_0_d_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_5_0 = readys_readys_5[0] & out_21_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_5_1 = readys_readys_5[1] & out_22_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_5_2 = readys_readys_5[2] & out_23_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        latch_6 = idle_6 & auto_in_1_d_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_6_0 = readys_readys_6[0] & out_27_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_6_1 = readys_readys_6[1] & out_28_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_6_2 = readys_readys_6[2] & out_29_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        latch_7 = idle_7 & auto_in_2_d_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_7_0 = readys_readys_7[0] & out_33_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_7_1 = readys_readys_7[1] & out_34_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_7_2 = readys_readys_7[2] & out_35_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        latch_8 = idle_8 & auto_in_3_d_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_8_0 = readys_readys_8[0] & out_39_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_8_1 = readys_readys_8[1] & out_40_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_8_2 = readys_readys_8[2] & out_41_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        latch_9 = idle_9 & auto_in_4_d_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_9_0 = readys_readys_9[0] & out_45_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_9_1 = readys_readys_9[1] & out_46_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_9_2 = readys_readys_9[2] & out_47_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire [4:0]  maskedBeats_2_5 = winnerQual_5_2 & auto_out_2_d_bits_opcode[0] ? ~(_beatsDO_decode_T_9[7:3]) : 5'h0;	// @[Arbiter.scala:99:79, :112:73, Edges.scala:106:36, :221:14, Xbar.scala:265:23, package.scala:235:{46,71,76}]
  wire [4:0]  maskedBeats_2_6 = winnerQual_6_2 & auto_out_2_d_bits_opcode[0] ? ~(_beatsDO_decode_T_9[7:3]) : 5'h0;	// @[Arbiter.scala:99:79, :112:73, Edges.scala:106:36, :221:14, Xbar.scala:265:23, package.scala:235:{46,71,76}]
  wire [4:0]  maskedBeats_2_7 = winnerQual_7_2 & auto_out_2_d_bits_opcode[0] ? ~(_beatsDO_decode_T_9[7:3]) : 5'h0;	// @[Arbiter.scala:99:79, :112:73, Edges.scala:106:36, :221:14, Xbar.scala:265:23, package.scala:235:{46,71,76}]
  wire [4:0]  maskedBeats_2_8 = winnerQual_8_2 & auto_out_2_d_bits_opcode[0] ? ~(_beatsDO_decode_T_9[7:3]) : 5'h0;	// @[Arbiter.scala:99:79, :112:73, Edges.scala:106:36, :221:14, Xbar.scala:265:23, package.scala:235:{46,71,76}]
  wire [4:0]  maskedBeats_2_9 = winnerQual_9_2 & auto_out_2_d_bits_opcode[0] ? ~(_beatsDO_decode_T_9[7:3]) : 5'h0;	// @[Arbiter.scala:99:79, :112:73, Edges.scala:106:36, :221:14, Xbar.scala:265:23, package.scala:235:{46,71,76}]
  always @(posedge clock) begin
    if (reset) begin
      beatsLeft <= 9'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask <= 5'h1F;	// @[Arbiter.scala:24:23]
      state_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_2 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_3 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_4 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_1 <= 9'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_1 <= 5'h1F;	// @[Arbiter.scala:24:23]
      state_1_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_1_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_1_2 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_1_3 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_1_4 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_2 <= 9'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_2 <= 4'hF;	// @[Arbiter.scala:24:23, Parameters.scala:57:20]
      state_2_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_2_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_2_2 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_2_3 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_3 <= 1'h0;	// @[Arbiter.scala:88:30]
      readys_mask_3 <= 4'hF;	// @[Arbiter.scala:24:23, Parameters.scala:57:20]
      state_3_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_3_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_3_2 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_3_3 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_4 <= 9'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_4 <= 5'h1F;	// @[Arbiter.scala:24:23]
      state_4_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_4_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_4_2 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_4_3 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_4_4 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_5 <= 9'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_5 <= 3'h7;	// @[Arbiter.scala:24:23, Parameters.scala:54:32]
      state_5_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_5_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_5_2 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_6 <= 9'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_6 <= 3'h7;	// @[Arbiter.scala:24:23, Parameters.scala:54:32]
      state_6_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_6_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_6_2 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_7 <= 9'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_7 <= 3'h7;	// @[Arbiter.scala:24:23, Parameters.scala:54:32]
      state_7_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_7_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_7_2 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_8 <= 9'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_8 <= 3'h7;	// @[Arbiter.scala:24:23, Parameters.scala:54:32]
      state_8_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_8_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_8_2 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_9 <= 9'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_9 <= 3'h7;	// @[Arbiter.scala:24:23, Parameters.scala:54:32]
      state_9_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_9_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_9_2 <= 1'h0;	// @[Arbiter.scala:117:26]
    end
    else begin
      if (latch)	// @[Arbiter.scala:90:24]
        beatsLeft <= (winnerQual_0 & ~(auto_in_0_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_1[11:3]) : 9'h0) | (winnerQual_1 & ~(auto_in_1_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_5[11:3]) : 9'h0) | (winnerQual_2 & ~(auto_in_2_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_9[11:3]) : 9'h0) | (winnerQual_3 & ~(auto_in_3_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_13[11:3]) : 9'h0) | (winnerQual_4 & ~(auto_in_4_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_17[11:3]) : 9'h0);	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Edges.scala:92:{28,37}, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft <= beatsLeft - {8'h0, auto_out_0_a_ready & x1_out_1_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, Bundles.scala:259:74, ReadyValidCancel.scala:49:33]
      if (latch & (|readys_valid))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask <= _readys_mask_T_6 | {_readys_mask_T_6[0], 4'h0};	// @[Arbiter.scala:24:23, Bundles.scala:259:74, package.scala:245:{43,53}]
      if (idle) begin	// @[Arbiter.scala:89:28]
        state_0 <= winnerQual_0;	// @[Arbiter.scala:99:79, :117:26]
        state_1 <= winnerQual_1;	// @[Arbiter.scala:99:79, :117:26]
        state_2 <= winnerQual_2;	// @[Arbiter.scala:99:79, :117:26]
        state_3 <= winnerQual_3;	// @[Arbiter.scala:99:79, :117:26]
        state_4 <= winnerQual_4;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_1)	// @[Arbiter.scala:90:24]
        beatsLeft_1 <= (winnerQual_1_0 & ~(auto_in_0_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_1[11:3]) : 9'h0) | (winnerQual_1_1 & ~(auto_in_1_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_5[11:3]) : 9'h0) | (winnerQual_1_2 & ~(auto_in_2_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_9[11:3]) : 9'h0) | (winnerQual_1_3 & ~(auto_in_3_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_13[11:3]) : 9'h0) | (winnerQual_1_4 & ~(auto_in_4_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_17[11:3]) : 9'h0);	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Edges.scala:92:{28,37}, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_1 <= beatsLeft_1 - {8'h0, auto_out_1_a_ready & bundleOut_1_out_1_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, Bundles.scala:259:74, ReadyValidCancel.scala:49:33]
      if (latch_1 & (|readys_valid_1))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_1 <= _readys_mask_T_17 | {_readys_mask_T_17[0], 4'h0};	// @[Arbiter.scala:24:23, Bundles.scala:259:74, package.scala:245:{43,53}]
      if (idle_1) begin	// @[Arbiter.scala:89:28]
        state_1_0 <= winnerQual_1_0;	// @[Arbiter.scala:99:79, :117:26]
        state_1_1 <= winnerQual_1_1;	// @[Arbiter.scala:99:79, :117:26]
        state_1_2 <= winnerQual_1_2;	// @[Arbiter.scala:99:79, :117:26]
        state_1_3 <= winnerQual_1_3;	// @[Arbiter.scala:99:79, :117:26]
        state_1_4 <= winnerQual_1_4;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_2)	// @[Arbiter.scala:90:24]
        beatsLeft_2 <= (winnerQual_2_0 & auto_in_1_c_bits_opcode[0] ? ~(_beatsCI_decode_T_5[11:3]) : 9'h0) | (winnerQual_2_1 & auto_in_2_c_bits_opcode[0] ? ~(_beatsCI_decode_T_9[11:3]) : 9'h0) | (winnerQual_2_2 & auto_in_3_c_bits_opcode[0] ? ~(_beatsCI_decode_T_13[11:3]) : 9'h0) | (winnerQual_2_3 & auto_in_4_c_bits_opcode[0] ? ~(_beatsCI_decode_T_17[11:3]) : 9'h0);	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Edges.scala:102:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_2 <= beatsLeft_2 - {8'h0, auto_out_1_c_ready & bundleOut_1_out_c_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, Bundles.scala:259:74, ReadyValidCancel.scala:49:33]
      if (latch_2 & (|readys_valid_2))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_2 <= _readys_mask_T_25 | {_readys_mask_T_25[1:0], 2'h0};	// @[Arbiter.scala:24:23, package.scala:245:{43,53}]
      if (idle_2) begin	// @[Arbiter.scala:89:28]
        state_2_0 <= winnerQual_2_0;	// @[Arbiter.scala:99:79, :117:26]
        state_2_1 <= winnerQual_2_1;	// @[Arbiter.scala:99:79, :117:26]
        state_2_2 <= winnerQual_2_2;	// @[Arbiter.scala:99:79, :117:26]
        state_2_3 <= winnerQual_2_3;	// @[Arbiter.scala:99:79, :117:26]
      end
      beatsLeft_3 <= beatsLeft_3 & beatsLeft_3 - bundleOut_1_out_e_valid;	// @[Arbiter.scala:88:30, :114:{23,52}, :126:29]
      if (~beatsLeft_3 & (|readys_valid_3))	// @[Arbiter.scala:28:{18,27}, :88:30, :89:28, Cat.scala:33:92]
        readys_mask_3 <= _readys_mask_T_33 | {_readys_mask_T_33[1:0], 2'h0};	// @[Arbiter.scala:24:23, package.scala:245:{43,53}]
      if (beatsLeft_3) begin	// @[Arbiter.scala:88:30]
      end
      else begin	// @[Arbiter.scala:88:30]
        state_3_0 <= readys_readys_3[0] & auto_in_1_e_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79, :117:26]
        state_3_1 <= readys_readys_3[1] & auto_in_2_e_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79, :117:26]
        state_3_2 <= readys_readys_3[2] & auto_in_3_e_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79, :117:26]
        state_3_3 <= readys_readys_3[3] & auto_in_4_e_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79, :117:26]
      end
      if (latch_4)	// @[Arbiter.scala:90:24]
        beatsLeft_4 <= (winnerQual_4_0 & ~(auto_in_0_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_1[11:3]) : 9'h0) | (winnerQual_4_1 & ~(auto_in_1_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_5[11:3]) : 9'h0) | (winnerQual_4_2 & ~(auto_in_2_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_9[11:3]) : 9'h0) | (winnerQual_4_3 & ~(auto_in_3_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_13[11:3]) : 9'h0) | (winnerQual_4_4 & ~(auto_in_4_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_17[11:3]) : 9'h0);	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Edges.scala:92:{28,37}, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_4 <= beatsLeft_4 - {8'h0, auto_out_2_a_ready & bundleOut_2_out_1_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, Bundles.scala:259:74, ReadyValidCancel.scala:49:33]
      if (latch_4 & (|readys_valid_4))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_4 <= _readys_mask_T_44 | {_readys_mask_T_44[0], 4'h0};	// @[Arbiter.scala:24:23, Bundles.scala:259:74, package.scala:245:{43,53}]
      if (idle_4) begin	// @[Arbiter.scala:89:28]
        state_4_0 <= winnerQual_4_0;	// @[Arbiter.scala:99:79, :117:26]
        state_4_1 <= winnerQual_4_1;	// @[Arbiter.scala:99:79, :117:26]
        state_4_2 <= winnerQual_4_2;	// @[Arbiter.scala:99:79, :117:26]
        state_4_3 <= winnerQual_4_3;	// @[Arbiter.scala:99:79, :117:26]
        state_4_4 <= winnerQual_4_4;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_5)	// @[Arbiter.scala:90:24]
        beatsLeft_5 <= (winnerQual_5_0 & auto_out_0_d_bits_opcode[0] ? ~(_beatsDO_decode_T_1[11:3]) : 9'h0) | {4'h0, maskedBeats_2_5[4:3], (winnerQual_5_1 & auto_out_1_d_bits_opcode[0] ? ~(_beatsDO_decode_T_5[5:3]) : 3'h0) | maskedBeats_2_5[2:0]};	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Bundles.scala:259:74, Edges.scala:106:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_5 <= beatsLeft_5 - {8'h0, auto_in_0_d_ready & out_24_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, Bundles.scala:259:74, ReadyValidCancel.scala:49:33]
      if (latch_5 & (|readys_valid_5))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_5 <= _readys_mask_T_52 | {_readys_mask_T_52[0], 2'h0};	// @[Arbiter.scala:24:23, package.scala:245:{43,53}]
      if (idle_5) begin	// @[Arbiter.scala:89:28]
        state_5_0 <= winnerQual_5_0;	// @[Arbiter.scala:99:79, :117:26]
        state_5_1 <= winnerQual_5_1;	// @[Arbiter.scala:99:79, :117:26]
        state_5_2 <= winnerQual_5_2;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_6)	// @[Arbiter.scala:90:24]
        beatsLeft_6 <= (winnerQual_6_0 & auto_out_0_d_bits_opcode[0] ? ~(_beatsDO_decode_T_1[11:3]) : 9'h0) | {4'h0, maskedBeats_2_6[4:3], (winnerQual_6_1 & auto_out_1_d_bits_opcode[0] ? ~(_beatsDO_decode_T_5[5:3]) : 3'h0) | maskedBeats_2_6[2:0]};	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Bundles.scala:259:74, Edges.scala:106:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_6 <= beatsLeft_6 - {8'h0, auto_in_1_d_ready & out_30_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, Bundles.scala:259:74, ReadyValidCancel.scala:49:33]
      if (latch_6 & (|readys_valid_6))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_6 <= _readys_mask_T_60 | {_readys_mask_T_60[0], 2'h0};	// @[Arbiter.scala:24:23, package.scala:245:{43,53}]
      if (idle_6) begin	// @[Arbiter.scala:89:28]
        state_6_0 <= winnerQual_6_0;	// @[Arbiter.scala:99:79, :117:26]
        state_6_1 <= winnerQual_6_1;	// @[Arbiter.scala:99:79, :117:26]
        state_6_2 <= winnerQual_6_2;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_7)	// @[Arbiter.scala:90:24]
        beatsLeft_7 <= (winnerQual_7_0 & auto_out_0_d_bits_opcode[0] ? ~(_beatsDO_decode_T_1[11:3]) : 9'h0) | {4'h0, maskedBeats_2_7[4:3], (winnerQual_7_1 & auto_out_1_d_bits_opcode[0] ? ~(_beatsDO_decode_T_5[5:3]) : 3'h0) | maskedBeats_2_7[2:0]};	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Bundles.scala:259:74, Edges.scala:106:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_7 <= beatsLeft_7 - {8'h0, auto_in_2_d_ready & out_36_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, Bundles.scala:259:74, ReadyValidCancel.scala:49:33]
      if (latch_7 & (|readys_valid_7))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_7 <= _readys_mask_T_68 | {_readys_mask_T_68[0], 2'h0};	// @[Arbiter.scala:24:23, package.scala:245:{43,53}]
      if (idle_7) begin	// @[Arbiter.scala:89:28]
        state_7_0 <= winnerQual_7_0;	// @[Arbiter.scala:99:79, :117:26]
        state_7_1 <= winnerQual_7_1;	// @[Arbiter.scala:99:79, :117:26]
        state_7_2 <= winnerQual_7_2;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_8)	// @[Arbiter.scala:90:24]
        beatsLeft_8 <= (winnerQual_8_0 & auto_out_0_d_bits_opcode[0] ? ~(_beatsDO_decode_T_1[11:3]) : 9'h0) | {4'h0, maskedBeats_2_8[4:3], (winnerQual_8_1 & auto_out_1_d_bits_opcode[0] ? ~(_beatsDO_decode_T_5[5:3]) : 3'h0) | maskedBeats_2_8[2:0]};	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Bundles.scala:259:74, Edges.scala:106:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_8 <= beatsLeft_8 - {8'h0, auto_in_3_d_ready & out_42_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, Bundles.scala:259:74, ReadyValidCancel.scala:49:33]
      if (latch_8 & (|readys_valid_8))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_8 <= _readys_mask_T_76 | {_readys_mask_T_76[0], 2'h0};	// @[Arbiter.scala:24:23, package.scala:245:{43,53}]
      if (idle_8) begin	// @[Arbiter.scala:89:28]
        state_8_0 <= winnerQual_8_0;	// @[Arbiter.scala:99:79, :117:26]
        state_8_1 <= winnerQual_8_1;	// @[Arbiter.scala:99:79, :117:26]
        state_8_2 <= winnerQual_8_2;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_9)	// @[Arbiter.scala:90:24]
        beatsLeft_9 <= (winnerQual_9_0 & auto_out_0_d_bits_opcode[0] ? ~(_beatsDO_decode_T_1[11:3]) : 9'h0) | {4'h0, maskedBeats_2_9[4:3], (winnerQual_9_1 & auto_out_1_d_bits_opcode[0] ? ~(_beatsDO_decode_T_5[5:3]) : 3'h0) | maskedBeats_2_9[2:0]};	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Bundles.scala:259:74, Edges.scala:106:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_9 <= beatsLeft_9 - {8'h0, auto_in_4_d_ready & out_48_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, Bundles.scala:259:74, ReadyValidCancel.scala:49:33]
      if (latch_9 & (|readys_valid_9))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_9 <= _readys_mask_T_84 | {_readys_mask_T_84[0], 2'h0};	// @[Arbiter.scala:24:23, package.scala:245:{43,53}]
      if (idle_9) begin	// @[Arbiter.scala:89:28]
        state_9_0 <= winnerQual_9_0;	// @[Arbiter.scala:99:79, :117:26]
        state_9_1 <= winnerQual_9_1;	// @[Arbiter.scala:99:79, :117:26]
        state_9_2 <= winnerQual_9_2;	// @[Arbiter.scala:99:79, :117:26]
      end
    end
  end // always @(posedge)
  `ifndef SYNTHESIS
    wire         prefixOR_2 = earlyWinner_0 | earlyWinner_1;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_3 = prefixOR_2 | earlyWinner_2;	// @[Arbiter.scala:98:79, :105:53]
    wire         _T_41 = portsAOI_filtered_0_earlyValid | portsAOI_filtered_1_0_earlyValid;	// @[Arbiter.scala:109:36, Xbar.scala:431:50]
    wire         prefixOR_2_1 = earlyWinner_1_0 | earlyWinner_1_1;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_3_1 = prefixOR_2_1 | earlyWinner_1_2;	// @[Arbiter.scala:98:79, :105:53]
    wire         _T_161 = portsAOI_filtered_1_earlyValid | portsAOI_filtered_1_1_earlyValid;	// @[Arbiter.scala:109:36, Xbar.scala:431:50]
    wire         prefixOR_2_2 = earlyWinner_2_0 | earlyWinner_2_1;	// @[Arbiter.scala:98:79, :105:53]
    wire         _T_274 = auto_in_1_c_valid | auto_in_2_c_valid;	// @[Arbiter.scala:109:36]
    wire         prefixOR_2_3 = earlyWinner_3_0 | earlyWinner_3_1;	// @[Arbiter.scala:98:79, :105:53]
    wire         _T_363 = auto_in_1_e_valid | auto_in_2_e_valid;	// @[Arbiter.scala:109:36]
    wire         prefixOR_2_4 = earlyWinner_4_0 | earlyWinner_4_1;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_3_4 = prefixOR_2_4 | earlyWinner_4_2;	// @[Arbiter.scala:98:79, :105:53]
    wire         _T_417 = portsAOI_filtered_2_earlyValid | portsAOI_filtered_1_2_earlyValid;	// @[Arbiter.scala:109:36, Xbar.scala:431:50]
    wire         _T_523 = out_21_earlyValid | out_22_earlyValid;	// @[Arbiter.scala:109:36, Xbar.scala:182:40]
    wire         _T_595 = out_27_earlyValid | out_28_earlyValid;	// @[Arbiter.scala:109:36, Xbar.scala:182:40]
    wire         _T_667 = out_33_earlyValid | out_34_earlyValid;	// @[Arbiter.scala:109:36, Xbar.scala:182:40]
    wire         _T_739 = out_39_earlyValid | out_40_earlyValid;	// @[Arbiter.scala:109:36, Xbar.scala:182:40]
    wire         _T_811 = out_45_earlyValid | out_46_earlyValid;	// @[Arbiter.scala:109:36, Xbar.scala:182:40]
    always @(posedge clock) begin	// @[Arbiter.scala:106:13]
      if (~reset & ~((~earlyWinner_0 | ~earlyWinner_1) & (~prefixOR_2 | ~earlyWinner_2) & (~prefixOR_3 | ~earlyWinner_3) & (~(prefixOR_3 | earlyWinner_3) | ~earlyWinner_4))) begin	// @[Arbiter.scala:98:79, :105:53, :106:{13,61,64,67,82}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~(_out_0_a_earlyValid_T | portsAOI_filtered_2_0_earlyValid | portsAOI_filtered_3_0_earlyValid | portsAOI_filtered_4_0_earlyValid) | earlyWinner_0 | earlyWinner_1 | earlyWinner_2 | earlyWinner_3 | earlyWinner_4)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}, Xbar.scala:431:50]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~(_T_41 | portsAOI_filtered_2_0_earlyValid | portsAOI_filtered_3_0_earlyValid | portsAOI_filtered_4_0_earlyValid) | _T_41 | portsAOI_filtered_2_0_earlyValid | portsAOI_filtered_3_0_earlyValid | portsAOI_filtered_4_0_earlyValid)) begin	// @[Arbiter.scala:109:{14,15,36,41}, Xbar.scala:431:50]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:109:14]
          $error("Assertion failed\n    at Arbiter.scala:109 assert (!validQuals .reduce(_||_) || validQuals .reduce(_||_))\n");	// @[Arbiter.scala:109:14]
        if (`STOP_COND_)	// @[Arbiter.scala:109:14]
          $fatal;	// @[Arbiter.scala:109:14]
      end
      if (~reset & ~((~earlyWinner_1_0 | ~earlyWinner_1_1) & (~prefixOR_2_1 | ~earlyWinner_1_2) & (~prefixOR_3_1 | ~earlyWinner_1_3) & (~(prefixOR_3_1 | earlyWinner_1_3) | ~earlyWinner_1_4))) begin	// @[Arbiter.scala:98:79, :105:53, :106:{13,61,64,67,82}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~(_out_1_a_earlyValid_T | portsAOI_filtered_2_1_earlyValid | portsAOI_filtered_3_1_earlyValid | portsAOI_filtered_4_1_earlyValid) | earlyWinner_1_0 | earlyWinner_1_1 | earlyWinner_1_2 | earlyWinner_1_3 | earlyWinner_1_4)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}, Xbar.scala:431:50]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~(_T_161 | portsAOI_filtered_2_1_earlyValid | portsAOI_filtered_3_1_earlyValid | portsAOI_filtered_4_1_earlyValid) | _T_161 | portsAOI_filtered_2_1_earlyValid | portsAOI_filtered_3_1_earlyValid | portsAOI_filtered_4_1_earlyValid)) begin	// @[Arbiter.scala:109:{14,15,36,41}, Xbar.scala:431:50]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:109:14]
          $error("Assertion failed\n    at Arbiter.scala:109 assert (!validQuals .reduce(_||_) || validQuals .reduce(_||_))\n");	// @[Arbiter.scala:109:14]
        if (`STOP_COND_)	// @[Arbiter.scala:109:14]
          $fatal;	// @[Arbiter.scala:109:14]
      end
      if (~reset & ~((~earlyWinner_2_0 | ~earlyWinner_2_1) & (~prefixOR_2_2 | ~earlyWinner_2_2) & (~(prefixOR_2_2 | earlyWinner_2_2) | ~earlyWinner_2_3))) begin	// @[Arbiter.scala:98:79, :105:53, :106:{13,61,64,67,82}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~(_sink_ACancel_earlyValid_T | auto_in_3_c_valid | auto_in_4_c_valid) | earlyWinner_2_0 | earlyWinner_2_1 | earlyWinner_2_2 | earlyWinner_2_3)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~(_T_274 | auto_in_3_c_valid | auto_in_4_c_valid) | _T_274 | auto_in_3_c_valid | auto_in_4_c_valid)) begin	// @[Arbiter.scala:109:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:109:14]
          $error("Assertion failed\n    at Arbiter.scala:109 assert (!validQuals .reduce(_||_) || validQuals .reduce(_||_))\n");	// @[Arbiter.scala:109:14]
        if (`STOP_COND_)	// @[Arbiter.scala:109:14]
          $fatal;	// @[Arbiter.scala:109:14]
      end
      if (~reset & ~((~earlyWinner_3_0 | ~earlyWinner_3_1) & (~prefixOR_2_3 | ~earlyWinner_3_2) & (~(prefixOR_2_3 | earlyWinner_3_2) | ~earlyWinner_3_3))) begin	// @[Arbiter.scala:98:79, :105:53, :106:{13,61,64,67,82}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~(_sink_ACancel_earlyValid_T_11 | auto_in_3_e_valid | auto_in_4_e_valid) | earlyWinner_3_0 | earlyWinner_3_1 | earlyWinner_3_2 | earlyWinner_3_3)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~(_T_363 | auto_in_3_e_valid | auto_in_4_e_valid) | _T_363 | auto_in_3_e_valid | auto_in_4_e_valid)) begin	// @[Arbiter.scala:109:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:109:14]
          $error("Assertion failed\n    at Arbiter.scala:109 assert (!validQuals .reduce(_||_) || validQuals .reduce(_||_))\n");	// @[Arbiter.scala:109:14]
        if (`STOP_COND_)	// @[Arbiter.scala:109:14]
          $fatal;	// @[Arbiter.scala:109:14]
      end
      if (~reset & ~((~earlyWinner_4_0 | ~earlyWinner_4_1) & (~prefixOR_2_4 | ~earlyWinner_4_2) & (~prefixOR_3_4 | ~earlyWinner_4_3) & (~(prefixOR_3_4 | earlyWinner_4_3) | ~earlyWinner_4_4))) begin	// @[Arbiter.scala:98:79, :105:53, :106:{13,61,64,67,82}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~(_out_2_a_earlyValid_T | portsAOI_filtered_2_2_earlyValid | portsAOI_filtered_3_2_earlyValid | portsAOI_filtered_4_2_earlyValid) | earlyWinner_4_0 | earlyWinner_4_1 | earlyWinner_4_2 | earlyWinner_4_3 | earlyWinner_4_4)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}, Xbar.scala:431:50]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~(_T_417 | portsAOI_filtered_2_2_earlyValid | portsAOI_filtered_3_2_earlyValid | portsAOI_filtered_4_2_earlyValid) | _T_417 | portsAOI_filtered_2_2_earlyValid | portsAOI_filtered_3_2_earlyValid | portsAOI_filtered_4_2_earlyValid)) begin	// @[Arbiter.scala:109:{14,15,36,41}, Xbar.scala:431:50]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:109:14]
          $error("Assertion failed\n    at Arbiter.scala:109 assert (!validQuals .reduce(_||_) || validQuals .reduce(_||_))\n");	// @[Arbiter.scala:109:14]
        if (`STOP_COND_)	// @[Arbiter.scala:109:14]
          $fatal;	// @[Arbiter.scala:109:14]
      end
      if (~reset & ~((~earlyWinner_5_0 | ~earlyWinner_5_1) & (~(earlyWinner_5_0 | earlyWinner_5_1) | ~earlyWinner_5_2))) begin	// @[Arbiter.scala:98:79, :105:53, :106:{13,61,64,67,82}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~(_sink_ACancel_earlyValid_T_22 | out_23_earlyValid) | earlyWinner_5_0 | earlyWinner_5_1 | earlyWinner_5_2)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}, Xbar.scala:182:40]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~(_T_523 | out_23_earlyValid) | _T_523 | out_23_earlyValid)) begin	// @[Arbiter.scala:109:{14,15,36,41}, Xbar.scala:182:40]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:109:14]
          $error("Assertion failed\n    at Arbiter.scala:109 assert (!validQuals .reduce(_||_) || validQuals .reduce(_||_))\n");	// @[Arbiter.scala:109:14]
        if (`STOP_COND_)	// @[Arbiter.scala:109:14]
          $fatal;	// @[Arbiter.scala:109:14]
      end
      if (~reset & ~((~earlyWinner_6_0 | ~earlyWinner_6_1) & (~(earlyWinner_6_0 | earlyWinner_6_1) | ~earlyWinner_6_2))) begin	// @[Arbiter.scala:98:79, :105:53, :106:{13,61,64,67,82}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~(_sink_ACancel_earlyValid_T_30 | out_29_earlyValid) | earlyWinner_6_0 | earlyWinner_6_1 | earlyWinner_6_2)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}, Xbar.scala:182:40]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~(_T_595 | out_29_earlyValid) | _T_595 | out_29_earlyValid)) begin	// @[Arbiter.scala:109:{14,15,36,41}, Xbar.scala:182:40]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:109:14]
          $error("Assertion failed\n    at Arbiter.scala:109 assert (!validQuals .reduce(_||_) || validQuals .reduce(_||_))\n");	// @[Arbiter.scala:109:14]
        if (`STOP_COND_)	// @[Arbiter.scala:109:14]
          $fatal;	// @[Arbiter.scala:109:14]
      end
      if (~reset & ~((~earlyWinner_7_0 | ~earlyWinner_7_1) & (~(earlyWinner_7_0 | earlyWinner_7_1) | ~earlyWinner_7_2))) begin	// @[Arbiter.scala:98:79, :105:53, :106:{13,61,64,67,82}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~(_sink_ACancel_earlyValid_T_38 | out_35_earlyValid) | earlyWinner_7_0 | earlyWinner_7_1 | earlyWinner_7_2)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}, Xbar.scala:182:40]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~(_T_667 | out_35_earlyValid) | _T_667 | out_35_earlyValid)) begin	// @[Arbiter.scala:109:{14,15,36,41}, Xbar.scala:182:40]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:109:14]
          $error("Assertion failed\n    at Arbiter.scala:109 assert (!validQuals .reduce(_||_) || validQuals .reduce(_||_))\n");	// @[Arbiter.scala:109:14]
        if (`STOP_COND_)	// @[Arbiter.scala:109:14]
          $fatal;	// @[Arbiter.scala:109:14]
      end
      if (~reset & ~((~earlyWinner_8_0 | ~earlyWinner_8_1) & (~(earlyWinner_8_0 | earlyWinner_8_1) | ~earlyWinner_8_2))) begin	// @[Arbiter.scala:98:79, :105:53, :106:{13,61,64,67,82}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~(_sink_ACancel_earlyValid_T_46 | out_41_earlyValid) | earlyWinner_8_0 | earlyWinner_8_1 | earlyWinner_8_2)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}, Xbar.scala:182:40]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~(_T_739 | out_41_earlyValid) | _T_739 | out_41_earlyValid)) begin	// @[Arbiter.scala:109:{14,15,36,41}, Xbar.scala:182:40]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:109:14]
          $error("Assertion failed\n    at Arbiter.scala:109 assert (!validQuals .reduce(_||_) || validQuals .reduce(_||_))\n");	// @[Arbiter.scala:109:14]
        if (`STOP_COND_)	// @[Arbiter.scala:109:14]
          $fatal;	// @[Arbiter.scala:109:14]
      end
      if (~reset & ~((~earlyWinner_9_0 | ~earlyWinner_9_1) & (~(earlyWinner_9_0 | earlyWinner_9_1) | ~earlyWinner_9_2))) begin	// @[Arbiter.scala:98:79, :105:53, :106:{13,61,64,67,82}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~(_sink_ACancel_earlyValid_T_54 | out_47_earlyValid) | earlyWinner_9_0 | earlyWinner_9_1 | earlyWinner_9_2)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}, Xbar.scala:182:40]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~(_T_811 | out_47_earlyValid) | _T_811 | out_47_earlyValid)) begin	// @[Arbiter.scala:109:{14,15,36,41}, Xbar.scala:182:40]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:109:14]
          $error("Assertion failed\n    at Arbiter.scala:109 assert (!validQuals .reduce(_||_) || validQuals .reduce(_||_))\n");	// @[Arbiter.scala:109:14]
        if (`STOP_COND_)	// @[Arbiter.scala:109:14]
          $fatal;	// @[Arbiter.scala:109:14]
      end
    end // always @(posedge)
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        beatsLeft = _RANDOM_0[8:0];	// @[Arbiter.scala:88:30]
        readys_mask = _RANDOM_0[13:9];	// @[Arbiter.scala:24:23, :88:30]
        state_0 = _RANDOM_0[14];	// @[Arbiter.scala:88:30, :117:26]
        state_1 = _RANDOM_0[15];	// @[Arbiter.scala:88:30, :117:26]
        state_2 = _RANDOM_0[16];	// @[Arbiter.scala:88:30, :117:26]
        state_3 = _RANDOM_0[17];	// @[Arbiter.scala:88:30, :117:26]
        state_4 = _RANDOM_0[18];	// @[Arbiter.scala:88:30, :117:26]
        beatsLeft_1 = _RANDOM_0[27:19];	// @[Arbiter.scala:88:30]
        readys_mask_1 = {_RANDOM_0[31:28], _RANDOM_1[0]};	// @[Arbiter.scala:24:23, :88:30]
        state_1_0 = _RANDOM_1[1];	// @[Arbiter.scala:24:23, :117:26]
        state_1_1 = _RANDOM_1[2];	// @[Arbiter.scala:24:23, :117:26]
        state_1_2 = _RANDOM_1[3];	// @[Arbiter.scala:24:23, :117:26]
        state_1_3 = _RANDOM_1[4];	// @[Arbiter.scala:24:23, :117:26]
        state_1_4 = _RANDOM_1[5];	// @[Arbiter.scala:24:23, :117:26]
        beatsLeft_2 = _RANDOM_1[14:6];	// @[Arbiter.scala:24:23, :88:30]
        readys_mask_2 = _RANDOM_1[18:15];	// @[Arbiter.scala:24:23]
        state_2_0 = _RANDOM_1[19];	// @[Arbiter.scala:24:23, :117:26]
        state_2_1 = _RANDOM_1[20];	// @[Arbiter.scala:24:23, :117:26]
        state_2_2 = _RANDOM_1[21];	// @[Arbiter.scala:24:23, :117:26]
        state_2_3 = _RANDOM_1[22];	// @[Arbiter.scala:24:23, :117:26]
        beatsLeft_3 = _RANDOM_1[23];	// @[Arbiter.scala:24:23, :88:30]
        readys_mask_3 = _RANDOM_1[27:24];	// @[Arbiter.scala:24:23]
        state_3_0 = _RANDOM_1[28];	// @[Arbiter.scala:24:23, :117:26]
        state_3_1 = _RANDOM_1[29];	// @[Arbiter.scala:24:23, :117:26]
        state_3_2 = _RANDOM_1[30];	// @[Arbiter.scala:24:23, :117:26]
        state_3_3 = _RANDOM_1[31];	// @[Arbiter.scala:24:23, :117:26]
        beatsLeft_4 = _RANDOM_2[8:0];	// @[Arbiter.scala:88:30]
        readys_mask_4 = _RANDOM_2[13:9];	// @[Arbiter.scala:24:23, :88:30]
        state_4_0 = _RANDOM_2[14];	// @[Arbiter.scala:88:30, :117:26]
        state_4_1 = _RANDOM_2[15];	// @[Arbiter.scala:88:30, :117:26]
        state_4_2 = _RANDOM_2[16];	// @[Arbiter.scala:88:30, :117:26]
        state_4_3 = _RANDOM_2[17];	// @[Arbiter.scala:88:30, :117:26]
        state_4_4 = _RANDOM_2[18];	// @[Arbiter.scala:88:30, :117:26]
        beatsLeft_5 = _RANDOM_2[27:19];	// @[Arbiter.scala:88:30]
        readys_mask_5 = _RANDOM_2[30:28];	// @[Arbiter.scala:24:23, :88:30]
        state_5_0 = _RANDOM_2[31];	// @[Arbiter.scala:88:30, :117:26]
        state_5_1 = _RANDOM_3[0];	// @[Arbiter.scala:117:26]
        state_5_2 = _RANDOM_3[1];	// @[Arbiter.scala:117:26]
        beatsLeft_6 = _RANDOM_3[10:2];	// @[Arbiter.scala:88:30, :117:26]
        readys_mask_6 = _RANDOM_3[13:11];	// @[Arbiter.scala:24:23, :117:26]
        state_6_0 = _RANDOM_3[14];	// @[Arbiter.scala:117:26]
        state_6_1 = _RANDOM_3[15];	// @[Arbiter.scala:117:26]
        state_6_2 = _RANDOM_3[16];	// @[Arbiter.scala:117:26]
        beatsLeft_7 = _RANDOM_3[25:17];	// @[Arbiter.scala:88:30, :117:26]
        readys_mask_7 = _RANDOM_3[28:26];	// @[Arbiter.scala:24:23, :117:26]
        state_7_0 = _RANDOM_3[29];	// @[Arbiter.scala:117:26]
        state_7_1 = _RANDOM_3[30];	// @[Arbiter.scala:117:26]
        state_7_2 = _RANDOM_3[31];	// @[Arbiter.scala:117:26]
        beatsLeft_8 = _RANDOM_4[8:0];	// @[Arbiter.scala:88:30]
        readys_mask_8 = _RANDOM_4[11:9];	// @[Arbiter.scala:24:23, :88:30]
        state_8_0 = _RANDOM_4[12];	// @[Arbiter.scala:88:30, :117:26]
        state_8_1 = _RANDOM_4[13];	// @[Arbiter.scala:88:30, :117:26]
        state_8_2 = _RANDOM_4[14];	// @[Arbiter.scala:88:30, :117:26]
        beatsLeft_9 = _RANDOM_4[23:15];	// @[Arbiter.scala:88:30]
        readys_mask_9 = _RANDOM_4[26:24];	// @[Arbiter.scala:24:23, :88:30]
        state_9_0 = _RANDOM_4[27];	// @[Arbiter.scala:88:30, :117:26]
        state_9_1 = _RANDOM_4[28];	// @[Arbiter.scala:88:30, :117:26]
        state_9_2 = _RANDOM_4[29];	// @[Arbiter.scala:88:30, :117:26]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  TLMonitor monitor (	// @[Nodes.scala:24:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_portsAOI_in_0_a_ready_WIRE),	// @[Mux.scala:27:73]
    .io_in_a_valid        (auto_in_0_a_valid),
    .io_in_a_bits_opcode  (auto_in_0_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_0_a_bits_param),
    .io_in_a_bits_size    (auto_in_0_a_bits_size),
    .io_in_a_bits_source  (auto_in_0_a_bits_source),
    .io_in_a_bits_address (auto_in_0_a_bits_address),
    .io_in_a_bits_mask    (auto_in_0_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_0_a_bits_corrupt),
    .io_in_d_ready        (auto_in_0_d_ready),
    .io_in_d_valid        (out_24_valid),	// @[Arbiter.scala:126:29]
    .io_in_d_bits_opcode  (out_24_bits_opcode),	// @[Mux.scala:27:73]
    .io_in_d_bits_param   (out_24_bits_param),	// @[Mux.scala:27:73]
    .io_in_d_bits_size    (out_24_bits_size),	// @[Mux.scala:27:73]
    .io_in_d_bits_source  (out_d_bits_source),	// @[Mux.scala:27:73]
    .io_in_d_bits_sink    (out_24_bits_sink),	// @[Mux.scala:27:73]
    .io_in_d_bits_denied  (out_24_bits_denied),	// @[Mux.scala:27:73]
    .io_in_d_bits_corrupt (out_24_bits_corrupt)	// @[Mux.scala:27:73]
  );
  TLMonitor_1 monitor_1 (	// @[Nodes.scala:24:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_portsAOI_in_1_a_ready_WIRE),	// @[Mux.scala:27:73]
    .io_in_a_valid        (auto_in_1_a_valid),
    .io_in_a_bits_opcode  (auto_in_1_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_1_a_bits_param),
    .io_in_a_bits_size    (auto_in_1_a_bits_size),
    .io_in_a_bits_source  (auto_in_1_a_bits_source),
    .io_in_a_bits_address (auto_in_1_a_bits_address),
    .io_in_a_bits_mask    (auto_in_1_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_1_a_bits_corrupt),
    .io_in_b_valid        (out_26_valid),	// @[Xbar.scala:182:40]
    .io_in_b_bits_param   (auto_out_1_b_bits_param),
    .io_in_b_bits_size    (4'h6),	// @[BundleMap.scala:247:19]
    .io_in_b_bits_source  (auto_out_1_b_bits_source[1:0]),	// @[Xbar.scala:231:69]
    .io_in_b_bits_address (auto_out_1_b_bits_address),
    .io_in_c_ready        (out_8_ready),	// @[Arbiter.scala:124:31]
    .io_in_c_valid        (auto_in_1_c_valid),
    .io_in_c_bits_opcode  (auto_in_1_c_bits_opcode),
    .io_in_c_bits_param   (auto_in_1_c_bits_param),
    .io_in_c_bits_size    (auto_in_1_c_bits_size),
    .io_in_c_bits_source  (auto_in_1_c_bits_source),
    .io_in_c_bits_address (auto_in_1_c_bits_address),
    .io_in_c_bits_corrupt (auto_in_1_c_bits_corrupt),
    .io_in_d_ready        (auto_in_1_d_ready),
    .io_in_d_valid        (out_30_valid),	// @[Arbiter.scala:126:29]
    .io_in_d_bits_opcode  (out_30_bits_opcode),	// @[Mux.scala:27:73]
    .io_in_d_bits_param   (out_30_bits_param),	// @[Mux.scala:27:73]
    .io_in_d_bits_size    (out_30_bits_size),	// @[Mux.scala:27:73]
    .io_in_d_bits_source  (out_1_d_bits_source),	// @[Mux.scala:27:73]
    .io_in_d_bits_sink    (out_30_bits_sink),	// @[Mux.scala:27:73]
    .io_in_d_bits_denied  (out_30_bits_denied),	// @[Mux.scala:27:73]
    .io_in_d_bits_corrupt (out_30_bits_corrupt),	// @[Mux.scala:27:73]
    .io_in_e_ready        (out_13_ready),	// @[Arbiter.scala:122:24]
    .io_in_e_valid        (auto_in_1_e_valid),
    .io_in_e_bits_sink    (auto_in_1_e_bits_sink)
  );
  TLMonitor_1 monitor_2 (	// @[Nodes.scala:24:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_portsAOI_in_2_a_ready_WIRE),	// @[Mux.scala:27:73]
    .io_in_a_valid        (auto_in_2_a_valid),
    .io_in_a_bits_opcode  (auto_in_2_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_2_a_bits_param),
    .io_in_a_bits_size    (auto_in_2_a_bits_size),
    .io_in_a_bits_source  (auto_in_2_a_bits_source),
    .io_in_a_bits_address (auto_in_2_a_bits_address),
    .io_in_a_bits_mask    (auto_in_2_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_2_a_bits_corrupt),
    .io_in_b_valid        (out_32_valid),	// @[Xbar.scala:182:40]
    .io_in_b_bits_param   (auto_out_1_b_bits_param),
    .io_in_b_bits_size    (4'h6),	// @[BundleMap.scala:247:19]
    .io_in_b_bits_source  (auto_out_1_b_bits_source[1:0]),	// @[Xbar.scala:231:69]
    .io_in_b_bits_address (auto_out_1_b_bits_address),
    .io_in_c_ready        (out_9_ready),	// @[Arbiter.scala:124:31]
    .io_in_c_valid        (auto_in_2_c_valid),
    .io_in_c_bits_opcode  (auto_in_2_c_bits_opcode),
    .io_in_c_bits_param   (auto_in_2_c_bits_param),
    .io_in_c_bits_size    (auto_in_2_c_bits_size),
    .io_in_c_bits_source  (auto_in_2_c_bits_source),
    .io_in_c_bits_address (auto_in_2_c_bits_address),
    .io_in_c_bits_corrupt (auto_in_2_c_bits_corrupt),
    .io_in_d_ready        (auto_in_2_d_ready),
    .io_in_d_valid        (out_36_valid),	// @[Arbiter.scala:126:29]
    .io_in_d_bits_opcode  (out_36_bits_opcode),	// @[Mux.scala:27:73]
    .io_in_d_bits_param   (out_36_bits_param),	// @[Mux.scala:27:73]
    .io_in_d_bits_size    (out_36_bits_size),	// @[Mux.scala:27:73]
    .io_in_d_bits_source  (out_2_d_bits_source),	// @[Mux.scala:27:73]
    .io_in_d_bits_sink    (out_36_bits_sink),	// @[Mux.scala:27:73]
    .io_in_d_bits_denied  (out_36_bits_denied),	// @[Mux.scala:27:73]
    .io_in_d_bits_corrupt (out_36_bits_corrupt),	// @[Mux.scala:27:73]
    .io_in_e_ready        (out_14_ready),	// @[Arbiter.scala:122:24]
    .io_in_e_valid        (auto_in_2_e_valid),
    .io_in_e_bits_sink    (auto_in_2_e_bits_sink)
  );
  TLMonitor_1 monitor_3 (	// @[Nodes.scala:24:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_portsAOI_in_3_a_ready_WIRE),	// @[Mux.scala:27:73]
    .io_in_a_valid        (auto_in_3_a_valid),
    .io_in_a_bits_opcode  (auto_in_3_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_3_a_bits_param),
    .io_in_a_bits_size    (auto_in_3_a_bits_size),
    .io_in_a_bits_source  (auto_in_3_a_bits_source),
    .io_in_a_bits_address (auto_in_3_a_bits_address),
    .io_in_a_bits_mask    (auto_in_3_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_3_a_bits_corrupt),
    .io_in_b_valid        (out_38_valid),	// @[Xbar.scala:182:40]
    .io_in_b_bits_param   (auto_out_1_b_bits_param),
    .io_in_b_bits_size    (4'h6),	// @[BundleMap.scala:247:19]
    .io_in_b_bits_source  (auto_out_1_b_bits_source[1:0]),	// @[Xbar.scala:231:69]
    .io_in_b_bits_address (auto_out_1_b_bits_address),
    .io_in_c_ready        (out_10_ready),	// @[Arbiter.scala:124:31]
    .io_in_c_valid        (auto_in_3_c_valid),
    .io_in_c_bits_opcode  (auto_in_3_c_bits_opcode),
    .io_in_c_bits_param   (auto_in_3_c_bits_param),
    .io_in_c_bits_size    (auto_in_3_c_bits_size),
    .io_in_c_bits_source  (auto_in_3_c_bits_source),
    .io_in_c_bits_address (auto_in_3_c_bits_address),
    .io_in_c_bits_corrupt (auto_in_3_c_bits_corrupt),
    .io_in_d_ready        (auto_in_3_d_ready),
    .io_in_d_valid        (out_42_valid),	// @[Arbiter.scala:126:29]
    .io_in_d_bits_opcode  (out_42_bits_opcode),	// @[Mux.scala:27:73]
    .io_in_d_bits_param   (out_42_bits_param),	// @[Mux.scala:27:73]
    .io_in_d_bits_size    (out_42_bits_size),	// @[Mux.scala:27:73]
    .io_in_d_bits_source  (out_3_d_bits_source),	// @[Mux.scala:27:73]
    .io_in_d_bits_sink    (out_42_bits_sink),	// @[Mux.scala:27:73]
    .io_in_d_bits_denied  (out_42_bits_denied),	// @[Mux.scala:27:73]
    .io_in_d_bits_corrupt (out_42_bits_corrupt),	// @[Mux.scala:27:73]
    .io_in_e_ready        (out_15_ready),	// @[Arbiter.scala:122:24]
    .io_in_e_valid        (auto_in_3_e_valid),
    .io_in_e_bits_sink    (auto_in_3_e_bits_sink)
  );
  TLMonitor_1 monitor_4 (	// @[Nodes.scala:24:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_portsAOI_in_4_a_ready_WIRE),	// @[Mux.scala:27:73]
    .io_in_a_valid        (auto_in_4_a_valid),
    .io_in_a_bits_opcode  (auto_in_4_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_4_a_bits_param),
    .io_in_a_bits_size    (auto_in_4_a_bits_size),
    .io_in_a_bits_source  (auto_in_4_a_bits_source),
    .io_in_a_bits_address (auto_in_4_a_bits_address),
    .io_in_a_bits_mask    (auto_in_4_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_4_a_bits_corrupt),
    .io_in_b_valid        (out_44_valid),	// @[Xbar.scala:182:40]
    .io_in_b_bits_param   (auto_out_1_b_bits_param),
    .io_in_b_bits_size    (4'h6),	// @[BundleMap.scala:247:19]
    .io_in_b_bits_source  (auto_out_1_b_bits_source[1:0]),	// @[Xbar.scala:231:69]
    .io_in_b_bits_address (auto_out_1_b_bits_address),
    .io_in_c_ready        (out_11_ready),	// @[Arbiter.scala:124:31]
    .io_in_c_valid        (auto_in_4_c_valid),
    .io_in_c_bits_opcode  (auto_in_4_c_bits_opcode),
    .io_in_c_bits_param   (auto_in_4_c_bits_param),
    .io_in_c_bits_size    (auto_in_4_c_bits_size),
    .io_in_c_bits_source  (auto_in_4_c_bits_source),
    .io_in_c_bits_address (auto_in_4_c_bits_address),
    .io_in_c_bits_corrupt (auto_in_4_c_bits_corrupt),
    .io_in_d_ready        (auto_in_4_d_ready),
    .io_in_d_valid        (out_48_valid),	// @[Arbiter.scala:126:29]
    .io_in_d_bits_opcode  (out_48_bits_opcode),	// @[Mux.scala:27:73]
    .io_in_d_bits_param   (out_48_bits_param),	// @[Mux.scala:27:73]
    .io_in_d_bits_size    (out_48_bits_size),	// @[Mux.scala:27:73]
    .io_in_d_bits_source  (out_4_d_bits_source),	// @[Mux.scala:27:73]
    .io_in_d_bits_sink    (out_48_bits_sink),	// @[Mux.scala:27:73]
    .io_in_d_bits_denied  (out_48_bits_denied),	// @[Mux.scala:27:73]
    .io_in_d_bits_corrupt (out_48_bits_corrupt),	// @[Mux.scala:27:73]
    .io_in_e_ready        (out_16_ready),	// @[Arbiter.scala:122:24]
    .io_in_e_valid        (auto_in_4_e_valid),
    .io_in_e_bits_sink    (auto_in_4_e_bits_sink)
  );
  assign auto_in_4_a_ready = _portsAOI_in_4_a_ready_WIRE;	// @[Mux.scala:27:73]
  assign auto_in_4_b_valid = out_44_valid;	// @[Xbar.scala:182:40]
  assign auto_in_4_b_bits_param = auto_out_1_b_bits_param;
  assign auto_in_4_b_bits_source = auto_out_1_b_bits_source[1:0];	// @[Xbar.scala:231:69]
  assign auto_in_4_b_bits_address = auto_out_1_b_bits_address;
  assign auto_in_4_c_ready = out_11_ready;	// @[Arbiter.scala:124:31]
  assign auto_in_4_d_valid = out_48_valid;	// @[Arbiter.scala:126:29]
  assign auto_in_4_d_bits_opcode = out_48_bits_opcode;	// @[Mux.scala:27:73]
  assign auto_in_4_d_bits_param = out_48_bits_param;	// @[Mux.scala:27:73]
  assign auto_in_4_d_bits_size = out_48_bits_size;	// @[Mux.scala:27:73]
  assign auto_in_4_d_bits_source = out_4_d_bits_source;	// @[Mux.scala:27:73]
  assign auto_in_4_d_bits_sink = out_48_bits_sink;	// @[Mux.scala:27:73]
  assign auto_in_4_d_bits_denied = out_48_bits_denied;	// @[Mux.scala:27:73]
  assign auto_in_4_d_bits_data = (muxStateEarly_9_0 ? auto_out_0_d_bits_data : 64'h0) | (muxStateEarly_9_1 ? auto_out_1_d_bits_data : 64'h0) | (muxStateEarly_9_2 ? auto_out_2_d_bits_data : 64'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_in_4_d_bits_corrupt = out_48_bits_corrupt;	// @[Mux.scala:27:73]
  assign auto_in_4_e_ready = out_16_ready;	// @[Arbiter.scala:122:24]
  assign auto_in_3_a_ready = _portsAOI_in_3_a_ready_WIRE;	// @[Mux.scala:27:73]
  assign auto_in_3_b_valid = out_38_valid;	// @[Xbar.scala:182:40]
  assign auto_in_3_b_bits_param = auto_out_1_b_bits_param;
  assign auto_in_3_b_bits_source = auto_out_1_b_bits_source[1:0];	// @[Xbar.scala:231:69]
  assign auto_in_3_b_bits_address = auto_out_1_b_bits_address;
  assign auto_in_3_c_ready = out_10_ready;	// @[Arbiter.scala:124:31]
  assign auto_in_3_d_valid = out_42_valid;	// @[Arbiter.scala:126:29]
  assign auto_in_3_d_bits_opcode = out_42_bits_opcode;	// @[Mux.scala:27:73]
  assign auto_in_3_d_bits_param = out_42_bits_param;	// @[Mux.scala:27:73]
  assign auto_in_3_d_bits_size = out_42_bits_size;	// @[Mux.scala:27:73]
  assign auto_in_3_d_bits_source = out_3_d_bits_source;	// @[Mux.scala:27:73]
  assign auto_in_3_d_bits_sink = out_42_bits_sink;	// @[Mux.scala:27:73]
  assign auto_in_3_d_bits_denied = out_42_bits_denied;	// @[Mux.scala:27:73]
  assign auto_in_3_d_bits_data = (muxStateEarly_8_0 ? auto_out_0_d_bits_data : 64'h0) | (muxStateEarly_8_1 ? auto_out_1_d_bits_data : 64'h0) | (muxStateEarly_8_2 ? auto_out_2_d_bits_data : 64'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_in_3_d_bits_corrupt = out_42_bits_corrupt;	// @[Mux.scala:27:73]
  assign auto_in_3_e_ready = out_15_ready;	// @[Arbiter.scala:122:24]
  assign auto_in_2_a_ready = _portsAOI_in_2_a_ready_WIRE;	// @[Mux.scala:27:73]
  assign auto_in_2_b_valid = out_32_valid;	// @[Xbar.scala:182:40]
  assign auto_in_2_b_bits_param = auto_out_1_b_bits_param;
  assign auto_in_2_b_bits_source = auto_out_1_b_bits_source[1:0];	// @[Xbar.scala:231:69]
  assign auto_in_2_b_bits_address = auto_out_1_b_bits_address;
  assign auto_in_2_c_ready = out_9_ready;	// @[Arbiter.scala:124:31]
  assign auto_in_2_d_valid = out_36_valid;	// @[Arbiter.scala:126:29]
  assign auto_in_2_d_bits_opcode = out_36_bits_opcode;	// @[Mux.scala:27:73]
  assign auto_in_2_d_bits_param = out_36_bits_param;	// @[Mux.scala:27:73]
  assign auto_in_2_d_bits_size = out_36_bits_size;	// @[Mux.scala:27:73]
  assign auto_in_2_d_bits_source = out_2_d_bits_source;	// @[Mux.scala:27:73]
  assign auto_in_2_d_bits_sink = out_36_bits_sink;	// @[Mux.scala:27:73]
  assign auto_in_2_d_bits_denied = out_36_bits_denied;	// @[Mux.scala:27:73]
  assign auto_in_2_d_bits_data = (muxStateEarly_7_0 ? auto_out_0_d_bits_data : 64'h0) | (muxStateEarly_7_1 ? auto_out_1_d_bits_data : 64'h0) | (muxStateEarly_7_2 ? auto_out_2_d_bits_data : 64'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_in_2_d_bits_corrupt = out_36_bits_corrupt;	// @[Mux.scala:27:73]
  assign auto_in_2_e_ready = out_14_ready;	// @[Arbiter.scala:122:24]
  assign auto_in_1_a_ready = _portsAOI_in_1_a_ready_WIRE;	// @[Mux.scala:27:73]
  assign auto_in_1_b_valid = out_26_valid;	// @[Xbar.scala:182:40]
  assign auto_in_1_b_bits_param = auto_out_1_b_bits_param;
  assign auto_in_1_b_bits_source = auto_out_1_b_bits_source[1:0];	// @[Xbar.scala:231:69]
  assign auto_in_1_b_bits_address = auto_out_1_b_bits_address;
  assign auto_in_1_c_ready = out_8_ready;	// @[Arbiter.scala:124:31]
  assign auto_in_1_d_valid = out_30_valid;	// @[Arbiter.scala:126:29]
  assign auto_in_1_d_bits_opcode = out_30_bits_opcode;	// @[Mux.scala:27:73]
  assign auto_in_1_d_bits_param = out_30_bits_param;	// @[Mux.scala:27:73]
  assign auto_in_1_d_bits_size = out_30_bits_size;	// @[Mux.scala:27:73]
  assign auto_in_1_d_bits_source = out_1_d_bits_source;	// @[Mux.scala:27:73]
  assign auto_in_1_d_bits_sink = out_30_bits_sink;	// @[Mux.scala:27:73]
  assign auto_in_1_d_bits_denied = out_30_bits_denied;	// @[Mux.scala:27:73]
  assign auto_in_1_d_bits_data = (muxStateEarly_6_0 ? auto_out_0_d_bits_data : 64'h0) | (muxStateEarly_6_1 ? auto_out_1_d_bits_data : 64'h0) | (muxStateEarly_6_2 ? auto_out_2_d_bits_data : 64'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_in_1_d_bits_corrupt = out_30_bits_corrupt;	// @[Mux.scala:27:73]
  assign auto_in_1_e_ready = out_13_ready;	// @[Arbiter.scala:122:24]
  assign auto_in_0_a_ready = _portsAOI_in_0_a_ready_WIRE;	// @[Mux.scala:27:73]
  assign auto_in_0_d_valid = out_24_valid;	// @[Arbiter.scala:126:29]
  assign auto_in_0_d_bits_opcode = out_24_bits_opcode;	// @[Mux.scala:27:73]
  assign auto_in_0_d_bits_param = out_24_bits_param;	// @[Mux.scala:27:73]
  assign auto_in_0_d_bits_size = out_24_bits_size;	// @[Mux.scala:27:73]
  assign auto_in_0_d_bits_source = out_d_bits_source;	// @[Mux.scala:27:73]
  assign auto_in_0_d_bits_sink = out_24_bits_sink;	// @[Mux.scala:27:73]
  assign auto_in_0_d_bits_denied = out_24_bits_denied;	// @[Mux.scala:27:73]
  assign auto_in_0_d_bits_data = (muxStateEarly_5_0 ? auto_out_0_d_bits_data : 64'h0) | (muxStateEarly_5_1 ? auto_out_1_d_bits_data : 64'h0) | (muxStateEarly_5_2 ? auto_out_2_d_bits_data : 64'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_in_0_d_bits_corrupt = out_24_bits_corrupt;	// @[Mux.scala:27:73]
  assign auto_out_2_a_valid = bundleOut_2_out_1_valid;	// @[Arbiter.scala:126:29]
  assign auto_out_2_a_bits_opcode = (muxStateEarly_4_0 ? auto_in_0_a_bits_opcode : 3'h0) | (muxStateEarly_4_1 ? auto_in_1_a_bits_opcode : 3'h0) | (muxStateEarly_4_2 ? auto_in_2_a_bits_opcode : 3'h0) | (muxStateEarly_4_3 ? auto_in_3_a_bits_opcode : 3'h0) | (muxStateEarly_4_4 ? auto_in_4_a_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_2_a_bits_param = (muxStateEarly_4_0 ? auto_in_0_a_bits_param : 3'h0) | (muxStateEarly_4_1 ? auto_in_1_a_bits_param : 3'h0) | (muxStateEarly_4_2 ? auto_in_2_a_bits_param : 3'h0) | (muxStateEarly_4_3 ? auto_in_3_a_bits_param : 3'h0) | (muxStateEarly_4_4 ? auto_in_4_a_bits_param : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_2_a_bits_size = (muxStateEarly_4_0 ? auto_in_0_a_bits_size : 4'h0) | (muxStateEarly_4_1 ? auto_in_1_a_bits_size : 4'h0) | (muxStateEarly_4_2 ? auto_in_2_a_bits_size : 4'h0) | (muxStateEarly_4_3 ? auto_in_3_a_bits_size : 4'h0) | (muxStateEarly_4_4 ? auto_in_4_a_bits_size : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_2_a_bits_source = (muxStateEarly_4_0 ? portsAOI_filtered_2_bits_source : 5'h0) | (muxStateEarly_4_1 ? portsAOI_filtered_1_2_bits_source : 5'h0) | (muxStateEarly_4_2 ? portsAOI_filtered_2_2_bits_source : 5'h0) | (muxStateEarly_4_3 ? portsAOI_filtered_3_2_bits_source : 5'h0) | (muxStateEarly_4_4 ? portsAOI_filtered_4_2_bits_source : 5'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73, Xbar.scala:240:{29,55}, :265:23]
  assign auto_out_2_a_bits_address = (muxStateEarly_4_0 ? auto_in_0_a_bits_address[30:0] : 31'h0) | (muxStateEarly_4_1 ? auto_in_1_a_bits_address[30:0] : 31'h0) | (muxStateEarly_4_2 ? auto_in_2_a_bits_address[30:0] : 31'h0) | (muxStateEarly_4_3 ? auto_in_3_a_bits_address[30:0] : 31'h0) | (muxStateEarly_4_4 ? auto_in_4_a_bits_address[30:0] : 31'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_2_a_bits_mask = (muxStateEarly_4_0 ? auto_in_0_a_bits_mask : 8'h0) | (muxStateEarly_4_1 ? auto_in_1_a_bits_mask : 8'h0) | (muxStateEarly_4_2 ? auto_in_2_a_bits_mask : 8'h0) | (muxStateEarly_4_3 ? auto_in_3_a_bits_mask : 8'h0) | (muxStateEarly_4_4 ? auto_in_4_a_bits_mask : 8'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_2_a_bits_data = (muxStateEarly_4_0 ? auto_in_0_a_bits_data : 64'h0) | (muxStateEarly_4_1 ? auto_in_1_a_bits_data : 64'h0) | (muxStateEarly_4_2 ? auto_in_2_a_bits_data : 64'h0) | (muxStateEarly_4_3 ? auto_in_3_a_bits_data : 64'h0) | (muxStateEarly_4_4 ? auto_in_4_a_bits_data : 64'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_out_2_a_bits_corrupt = muxStateEarly_4_0 & auto_in_0_a_bits_corrupt | muxStateEarly_4_1 & auto_in_1_a_bits_corrupt | muxStateEarly_4_2 & auto_in_2_a_bits_corrupt | muxStateEarly_4_3 & auto_in_3_a_bits_corrupt | muxStateEarly_4_4 & auto_in_4_a_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_out_2_d_ready = ~(auto_out_2_d_bits_source[4]) & auto_in_0_d_ready & allowed_5_2 | (&(auto_out_2_d_bits_source[4:2])) & auto_in_1_d_ready & allowed_6_2 | requestDOI_2_2 & auto_in_2_d_ready & allowed_7_2 | requestDOI_2_3 & auto_in_3_d_ready & allowed_8_2 | requestDOI_2_4 & auto_in_4_d_ready & allowed_9_2;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:54:{10,32}]
  assign auto_out_1_a_valid = bundleOut_1_out_1_valid;	// @[Arbiter.scala:126:29]
  assign auto_out_1_a_bits_opcode = (muxStateEarly_1_0 ? auto_in_0_a_bits_opcode : 3'h0) | (muxStateEarly_1_1 ? auto_in_1_a_bits_opcode : 3'h0) | (muxStateEarly_1_2 ? auto_in_2_a_bits_opcode : 3'h0) | (muxStateEarly_1_3 ? auto_in_3_a_bits_opcode : 3'h0) | (muxStateEarly_1_4 ? auto_in_4_a_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_1_a_bits_param = (muxStateEarly_1_0 ? auto_in_0_a_bits_param : 3'h0) | (muxStateEarly_1_1 ? auto_in_1_a_bits_param : 3'h0) | (muxStateEarly_1_2 ? auto_in_2_a_bits_param : 3'h0) | (muxStateEarly_1_3 ? auto_in_3_a_bits_param : 3'h0) | (muxStateEarly_1_4 ? auto_in_4_a_bits_param : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_1_a_bits_size = (muxStateEarly_1_0 ? auto_in_0_a_bits_size[2:0] : 3'h0) | (muxStateEarly_1_1 ? auto_in_1_a_bits_size[2:0] : 3'h0) | (muxStateEarly_1_2 ? auto_in_2_a_bits_size[2:0] : 3'h0) | (muxStateEarly_1_3 ? auto_in_3_a_bits_size[2:0] : 3'h0) | (muxStateEarly_1_4 ? auto_in_4_a_bits_size[2:0] : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_1_a_bits_source = (muxStateEarly_1_0 ? portsAOI_filtered_2_bits_source : 5'h0) | (muxStateEarly_1_1 ? portsAOI_filtered_1_2_bits_source : 5'h0) | (muxStateEarly_1_2 ? portsAOI_filtered_2_2_bits_source : 5'h0) | (muxStateEarly_1_3 ? portsAOI_filtered_3_2_bits_source : 5'h0) | (muxStateEarly_1_4 ? portsAOI_filtered_4_2_bits_source : 5'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73, Xbar.scala:240:{29,55}, :265:23]
  assign auto_out_1_a_bits_address = (muxStateEarly_1_0 ? auto_in_0_a_bits_address : 32'h0) | (muxStateEarly_1_1 ? auto_in_1_a_bits_address : 32'h0) | (muxStateEarly_1_2 ? auto_in_2_a_bits_address : 32'h0) | (muxStateEarly_1_3 ? auto_in_3_a_bits_address : 32'h0) | (muxStateEarly_1_4 ? auto_in_4_a_bits_address : 32'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_1_a_bits_mask = (muxStateEarly_1_0 ? auto_in_0_a_bits_mask : 8'h0) | (muxStateEarly_1_1 ? auto_in_1_a_bits_mask : 8'h0) | (muxStateEarly_1_2 ? auto_in_2_a_bits_mask : 8'h0) | (muxStateEarly_1_3 ? auto_in_3_a_bits_mask : 8'h0) | (muxStateEarly_1_4 ? auto_in_4_a_bits_mask : 8'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_1_a_bits_data = (muxStateEarly_1_0 ? auto_in_0_a_bits_data : 64'h0) | (muxStateEarly_1_1 ? auto_in_1_a_bits_data : 64'h0) | (muxStateEarly_1_2 ? auto_in_2_a_bits_data : 64'h0) | (muxStateEarly_1_3 ? auto_in_3_a_bits_data : 64'h0) | (muxStateEarly_1_4 ? auto_in_4_a_bits_data : 64'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_out_1_a_bits_corrupt = muxStateEarly_1_0 & auto_in_0_a_bits_corrupt | muxStateEarly_1_1 & auto_in_1_a_bits_corrupt | muxStateEarly_1_2 & auto_in_2_a_bits_corrupt | muxStateEarly_1_3 & auto_in_3_a_bits_corrupt | muxStateEarly_1_4 & auto_in_4_a_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_out_1_b_ready = (&(auto_out_1_b_bits_source[4:2])) & auto_in_1_b_ready | requestBOI_1_2 & auto_in_2_b_ready | requestBOI_1_3 & auto_in_3_b_ready | requestBOI_1_4 & auto_in_4_b_ready;	// @[Mux.scala:27:73, Parameters.scala:54:{10,32}]
  assign auto_out_1_c_valid = bundleOut_1_out_c_valid;	// @[Arbiter.scala:126:29]
  assign auto_out_1_c_bits_opcode = (muxStateEarly_2_0 ? auto_in_1_c_bits_opcode : 3'h0) | (muxStateEarly_2_1 ? auto_in_2_c_bits_opcode : 3'h0) | (muxStateEarly_2_2 ? auto_in_3_c_bits_opcode : 3'h0) | (muxStateEarly_2_3 ? auto_in_4_c_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_1_c_bits_param = (muxStateEarly_2_0 ? auto_in_1_c_bits_param : 3'h0) | (muxStateEarly_2_1 ? auto_in_2_c_bits_param : 3'h0) | (muxStateEarly_2_2 ? auto_in_3_c_bits_param : 3'h0) | (muxStateEarly_2_3 ? auto_in_4_c_bits_param : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_1_c_bits_size = (muxStateEarly_2_0 ? auto_in_1_c_bits_size[2:0] : 3'h0) | (muxStateEarly_2_1 ? auto_in_2_c_bits_size[2:0] : 3'h0) | (muxStateEarly_2_2 ? auto_in_3_c_bits_size[2:0] : 3'h0) | (muxStateEarly_2_3 ? auto_in_4_c_bits_size[2:0] : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_1_c_bits_source = (muxStateEarly_2_0 ? {3'h7, auto_in_1_c_bits_source} : 5'h0) | (muxStateEarly_2_1 ? {3'h6, auto_in_2_c_bits_source} : 5'h0) | (muxStateEarly_2_2 ? {3'h5, auto_in_3_c_bits_source} : 5'h0) | (muxStateEarly_2_3 ? {3'h4, auto_in_4_c_bits_source} : 5'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73, Parameters.scala:54:32, Xbar.scala:262:55, :265:23]
  assign auto_out_1_c_bits_address = (muxStateEarly_2_0 ? auto_in_1_c_bits_address : 32'h0) | (muxStateEarly_2_1 ? auto_in_2_c_bits_address : 32'h0) | (muxStateEarly_2_2 ? auto_in_3_c_bits_address : 32'h0) | (muxStateEarly_2_3 ? auto_in_4_c_bits_address : 32'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_1_c_bits_data = (muxStateEarly_2_0 ? auto_in_1_c_bits_data : 64'h0) | (muxStateEarly_2_1 ? auto_in_2_c_bits_data : 64'h0) | (muxStateEarly_2_2 ? auto_in_3_c_bits_data : 64'h0) | (muxStateEarly_2_3 ? auto_in_4_c_bits_data : 64'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_out_1_c_bits_corrupt = muxStateEarly_2_0 & auto_in_1_c_bits_corrupt | muxStateEarly_2_1 & auto_in_2_c_bits_corrupt | muxStateEarly_2_2 & auto_in_3_c_bits_corrupt | muxStateEarly_2_3 & auto_in_4_c_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_out_1_d_ready = ~(auto_out_1_d_bits_source[4]) & auto_in_0_d_ready & allowed_5_1 | (&(auto_out_1_d_bits_source[4:2])) & auto_in_1_d_ready & allowed_6_1 | requestDOI_1_2 & auto_in_2_d_ready & allowed_7_1 | requestDOI_1_3 & auto_in_3_d_ready & allowed_8_1 | requestDOI_1_4 & auto_in_4_d_ready & allowed_9_1;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:54:{10,32}]
  assign auto_out_1_e_valid = bundleOut_1_out_e_valid;	// @[Arbiter.scala:126:29]
  assign auto_out_1_e_bits_sink = ((beatsLeft_3 ? state_3_0 : earlyWinner_3_0) ? auto_in_1_e_bits_sink : 3'h0) | ((beatsLeft_3 ? state_3_1 : earlyWinner_3_1) ? auto_in_2_e_bits_sink : 3'h0) | ((beatsLeft_3 ? state_3_2 : earlyWinner_3_2) ? auto_in_3_e_bits_sink : 3'h0) | ((beatsLeft_3 ? state_3_3 : earlyWinner_3_3) ? auto_in_4_e_bits_sink : 3'h0);	// @[Arbiter.scala:88:30, :98:79, :117:26, :118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_0_a_valid = x1_out_1_valid;	// @[Arbiter.scala:126:29]
  assign auto_out_0_a_bits_opcode = (muxStateEarly_0 ? auto_in_0_a_bits_opcode : 3'h0) | (muxStateEarly_1 ? auto_in_1_a_bits_opcode : 3'h0) | (muxStateEarly_2 ? auto_in_2_a_bits_opcode : 3'h0) | (muxStateEarly_3 ? auto_in_3_a_bits_opcode : 3'h0) | (muxStateEarly_4 ? auto_in_4_a_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_0_a_bits_param = (muxStateEarly_0 ? auto_in_0_a_bits_param : 3'h0) | (muxStateEarly_1 ? auto_in_1_a_bits_param : 3'h0) | (muxStateEarly_2 ? auto_in_2_a_bits_param : 3'h0) | (muxStateEarly_3 ? auto_in_3_a_bits_param : 3'h0) | (muxStateEarly_4 ? auto_in_4_a_bits_param : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_0_a_bits_size = (muxStateEarly_0 ? auto_in_0_a_bits_size : 4'h0) | (muxStateEarly_1 ? auto_in_1_a_bits_size : 4'h0) | (muxStateEarly_2 ? auto_in_2_a_bits_size : 4'h0) | (muxStateEarly_3 ? auto_in_3_a_bits_size : 4'h0) | (muxStateEarly_4 ? auto_in_4_a_bits_size : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_0_a_bits_source = (muxStateEarly_0 ? portsAOI_filtered_2_bits_source : 5'h0) | (muxStateEarly_1 ? portsAOI_filtered_1_2_bits_source : 5'h0) | (muxStateEarly_2 ? portsAOI_filtered_2_2_bits_source : 5'h0) | (muxStateEarly_3 ? portsAOI_filtered_3_2_bits_source : 5'h0) | (muxStateEarly_4 ? portsAOI_filtered_4_2_bits_source : 5'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73, Xbar.scala:240:{29,55}, :265:23]
  assign auto_out_0_a_bits_address = (muxStateEarly_0 ? auto_in_0_a_bits_address[30:0] : 31'h0) | (muxStateEarly_1 ? auto_in_1_a_bits_address[30:0] : 31'h0) | (muxStateEarly_2 ? auto_in_2_a_bits_address[30:0] : 31'h0) | (muxStateEarly_3 ? auto_in_3_a_bits_address[30:0] : 31'h0) | (muxStateEarly_4 ? auto_in_4_a_bits_address[30:0] : 31'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_0_a_bits_mask = (muxStateEarly_0 ? auto_in_0_a_bits_mask : 8'h0) | (muxStateEarly_1 ? auto_in_1_a_bits_mask : 8'h0) | (muxStateEarly_2 ? auto_in_2_a_bits_mask : 8'h0) | (muxStateEarly_3 ? auto_in_3_a_bits_mask : 8'h0) | (muxStateEarly_4 ? auto_in_4_a_bits_mask : 8'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_0_a_bits_data = (muxStateEarly_0 ? auto_in_0_a_bits_data : 64'h0) | (muxStateEarly_1 ? auto_in_1_a_bits_data : 64'h0) | (muxStateEarly_2 ? auto_in_2_a_bits_data : 64'h0) | (muxStateEarly_3 ? auto_in_3_a_bits_data : 64'h0) | (muxStateEarly_4 ? auto_in_4_a_bits_data : 64'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_out_0_a_bits_corrupt = muxStateEarly_0 & auto_in_0_a_bits_corrupt | muxStateEarly_1 & auto_in_1_a_bits_corrupt | muxStateEarly_2 & auto_in_2_a_bits_corrupt | muxStateEarly_3 & auto_in_3_a_bits_corrupt | muxStateEarly_4 & auto_in_4_a_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_out_0_d_ready = ~(auto_out_0_d_bits_source[4]) & auto_in_0_d_ready & allowed_5_0 | (&(auto_out_0_d_bits_source[4:2])) & auto_in_1_d_ready & allowed_6_0 | requestDOI_0_2 & auto_in_2_d_ready & allowed_7_0 | requestDOI_0_3 & auto_in_3_d_ready & allowed_8_0 | requestDOI_0_4 & auto_in_4_d_ready & allowed_9_0;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:54:{10,32}]
endmodule

